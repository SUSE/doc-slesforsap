<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="file:/usr/share/xml/geekodoc/rng/geekodoc5-flat.rnc"
   type="application/relax-ng-compact-syntax"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<!--
Further information:
* SAP Monitoring will become easier and powerful using SLES for SAP
https://suse.com/c/coming-soon-sap-landscape-monitoring-on-sles-for-sap/
-->
<article version="5.1" xml:lang="en" xml:id="article-sap-monitoring"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:its="http://www.w3.org/2005/11/its">
 <title>&sap; Monitoring</title>
 <subtitle>&sles4sapreg; Â· &sleha;</subtitle>
 <info>
  <productname>&productname;</productname>
  <productname role="abbrev">&productnameshort;</productname>
  <productnumber>&productnumber;</productnumber>
  <meta name="title" its:translate="yes">&sap; Monitoring</meta>
  <meta name="description" its:translate="yes">How to use monitoring solutions to check on &sap; systems</meta>
  <meta name="social-descr" its:translate="yes">Use monitoring solutions to check on &sap; systems</meta>
  <date><?dbtimestamp format="B d, Y"?></date>
  <revhistory xml:id="rh-article-sap-monitoring">
    <revision>
      <date>2024-06-26</date>
      <revdescription>
        <para>
          Updated for the initial release of &productname; &productnumber;.
        </para>
      </revdescription>
    </revision>
  </revhistory>
  <meta name="task" its:translate="yes">
    <phrase>Monitoring</phrase>
  </meta>
  <meta name="series" its:translate="no">Products &amp; Solutions</meta>
  <abstract>
   <para>
    This article shows monitoring solutions for &sap; administrators to
    efficiently monitor their &sap; systems. The solutions that is described
    here works for &slsreg;&nbsp;12 SP3 to 15&nbsp;SP2.
   </para>
  </abstract>
 </info>
 <sect1 xml:id="sec-sol-monit-intro">
  <title>Introduction</title>

  <para>
   The exporters described here make it possible to export metrics that can be
   combined and integrated with Prometheus and Grafana to produce advanced
   dashboards.
  </para>

  <para>
   &suse; supports Prometheus and Grafana through &suma; 4.0. Some Grafana
   dashboards for &hana;, &s4h;, &netweaver;, and the cluster monitoring are
   provided by &suse; via Grafana community dashboards.
  </para>
 </sect1>
 <sect1 xml:id="sec-sol-monit-terms">
  <title>Terminology</title>

  <variablelist>
   <varlistentry>
    <term>Grafana</term>
    <listitem>
     <para>
      An interactive visualization and analytics Web application. It provides
      methods to visualize, explore, and query your metrics, and trigger
      alerts.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Prometheus</term>
    <listitem>
     <para>
      A toolkit that collects and evaluates metrics, displays the result, and
      triggers possible alerts when an observed condition occurs. Metrics can be
      collected from different targets at specified intervals.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-sol-autom-install-exporters">
  <title>Installing exporters</title>

  <para>
   Installation of an exporter follows the procedure below.
  </para>

  <procedure>
   <title>Exporter installation</title>
   <step>
    <para>
     Install the package. All package are available in &sles4sap;.
    </para>
   </step>
   <step performance="optional">
    <para>
     Copy the configuration file to
     <filename>/etc/<replaceable>EXPORTER_DIR</replaceable></filename>. The
     exact folder name is different for each exporter. This step depends on the
     exporter. If you skip this step, the default configuration is used.
    </para>
   </step>
   <step>
    <para>
     Start the daemon:
    </para>
<screen>systemctl start <replaceable>NAME_OF_DAEMON</replaceable></screen>
   </step>
  </procedure>

  <para>
   The above procedure is automatically performed by each of the &salt; formulas
   described in <xref linkend="article-sap-automation"/>.
  </para>
 </sect1>

 <sect1 xml:id="sec-sol-monit-hana-db-exp">
  <title>&hana; database exporter</title>
  <para>
    &hana; database exporter makes it possible to export &hana; database
    metrics. The tool can export metrics from more than one
    database and tenant if the <literal>multi_tenant</literal> option is
    enabled in the configuration file (enabled by default).
  </para>
  <para>
    The labels <literal>sid</literal> (system identifier),
    <literal>insnr</literal> (instance number),
    <literal>database_name</literal> (database name) and
    <literal>host</literal> (machine hostname) are exported for all the metrics.
  </para>
  <sect2 xml:id="sec-sol-monit-hana-db-expprerequisites">
    <title>Prerequisites</title>
    <itemizedlist>
      <listitem>
        <para>
          A running and reachable &hana; database (single or multi-container). It is recommended to run the exporter on the same machine
          with the &hana; database. Ideally, each database should be monitored
          by one exporter.
        </para>
      </listitem>
      <listitem>
        <para>
          One of the following &hana; connectors:
        </para>
        <itemizedlist>
        <listitem>
          <para>
            <link xlink:href="https://help.sap.com/viewer/1efad1691c1f496b8b580064a6536c2d/Cloud/en-US/39eca89d94ca464ca52385ad50fc7dea.html"><literal>dbapi</literal>
            (official &sap; connector)</link>
          </para>
        </listitem>
        <listitem>
        <para>
            <link
            xlink:href="https://github.com/SAP/PyHDB"><literal>pyhdb</literal>
            (unofficial/open source)</link>
          </para>
        </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>
          Certain metrics are collected in the &hana; monitoring views by
          the
          <link
          xlink:href="https://help.sap.com/saphelp_nwpi711/helpdata/en/21/98c443122744efae67c0352033691d/frameset.htm">SAP
          Host agent</link>. To have access to all the monitoring metrics, make
          sure that the &sap; Host agent is installed and running.
        </para>
      </listitem>
    </itemizedlist>
  </sect2>
  <sect2 xml:id="sec-sol-monit-hana-db-metrics-file">
    <title>Metrics file</title>
    <para>
      The exporter relies on a metrics file to determine what metrics to export. When the metrics file uses the JSON format, you can use the options listed below.
    </para>

    <itemizedlist>
    <listitem>
    <para>
      <literal>enabled</literal> (boolean, optional). Determines whether the query is executed or not. If set to <option>false</option>, the metrics for this query are not executed.
    </para>
    </listitem>
    <listitem>
    <para>
      <literal>hana_version_range</literal> (list, optional). The &hana; database versions range where the query is available (<literal>[1.0.0]</literal> by default). If the current database version is not within the specified range, the query is not executed. If the list has only one element, all versions beyond the specified value (including the defined one) are queried.
    </para>
    </listitem>
    <listitem>
    <para>
      <literal>metrics</literal> (list) A list of metrics for the query.
    </para>
    </listitem>
    <listitem>
    <para>
      <literal>name</literal> (string) A name for the exported metrics.
    </para>
    </listitem>
    <listitem>
    <para>
      <literal>description</literal> (string) A description of the metrics.
    </para>
    </listitem>
    <listitem>
    <para>
      <literal>labels</literal> (list) A list of labels used to split the
      records.
    </para>
    </listitem>
    <listitem>
    <para>
      <literal>value</literal> (string) A name of the column for the exported value (must match with one of the columns of the query).
    </para>
    </listitem>
    <listitem>
    <para>
      <literal>unit</literal> (string) Used unit for the exported value (for example, `mb`).
    </para>
    </listitem>
    <listitem>
    <para>
      <literal>type</literal> (enum{gauge}) Defines the type of the exported metric (<literal>gauge</literal> is the only available option).
    </para>
    </listitem>
  </itemizedlist>
  <para>
    Below is an example of a metrics file:
  </para>
<screen>{
  "SELECT TOP 10 host, LPAD(port, 5) port, SUBSTRING(REPLACE_REGEXPR('\n' IN statement_string WITH ' ' OCCURRENCE ALL), 1,30) sql_string, statement_hash sql_hash, execution_count, total_execution_time + total_preparation_time total_elapsed_time FROM sys.m_sql_plan_cache ORDER BY total_elapsed_time, execution_count DESC;":
  {
    "enabled": true,
    "hana_version_range": ["1.0"]
    "metrics": [
      {
        "name": "hanadb_sql_top_time_consumers",
        "description": "Top statements time consumers. Sum of the time consumed in all executions in Microseconds",
        "labels": ["HOST", "PORT", "SQL_STRING", "SQL_HASH"],
        "value": "TOTAL_ELAPSED_TIME",
        "unit": "mu",
        "type": "gauge"
      },
      {
        "name": "hanadb_sql_top_time_consumers",
        "description": "Top statements time consumers. Number of total executions of the SQL Statement",
        "labels": ["HOST", "PORT", "SQL_STRING", "SQL_HASH"],
        "value": "EXECUTION_COUNT",
        "unit": "count",
        "type": "gauge"
      }
    ]
  }
}
</screen>
</sect2>
  <sect2 xml:id="sec-sol-monit-hana-db-install">
    <title>Installing the &hana; database exporter</title>
      <para>
        Use the <command>zypper install prometheus-hanadb_exporter</command> command to install the exporter.
      </para>
      <para>
        You can find the latest development repositories at
        <link xlink:href="https://build.opensuse.org/package/show/network:ha-clustering:sap-deployments:devel/prometheus-hanadb_exporter">SUSE's
        Open Build Service</link>.
      </para>
      <para>
        To install the exporter from the source code, make sure you have Git and Python 3 installed on your system. Run the following commands to install the exporter with the PyHDB &hana; connector:
      </para>
<screen>git clone https://github.com/SUSE/hanadb_exporter
cd hanadb_exporter # project root folder
virtualenv virt
source virt/bin/activate
pip install pyhdb
pip install .
</screen>
</sect2>
  <sect2 xml:id="sec-sol-monit-hana-db-config">
    <title>Configuring the exporter</title>
    <para>
      Use the following example of the <filename>config.json</filename> configuration file as a starting point.
    </para>
<screen>{
  "listen_address": "0.0.0.0",
  "exposition_port": 9668,
  "multi_tenant": true,
  "timeout": 30,
  "hana": {
    "host": "<replaceable>HOSTNAME</replaceable>",
    "port": 30013,
    "user": "SYSTEM",
    "password": "<replaceable>PASSWORD</replaceable>",
    "ssl": false,
    "ssl_validate_cert": false
  },
  "logging": {
    "config_file": "<replaceable>PATH</replaceable>/logging_config.ini",
    "log_file": "<replaceable>PATH</replaceable>/hanadb_exporter.log"
  }
}</screen>
<para>
Below is a list of key configuration options.
</para>
    <itemizedlist>
      <listitem>
        <para>
          <literal>listen_address</literal> IP address of the Prometheus exporter (0.0.0.0 by default).
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>exposition_port</literal> Port through which the
          Prometheus exporter is accessible (9968 by default).
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>multi_tenant</literal> Export the metrics from
          other tenants. This requires a connection to the system database (port 30013).
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>timeout</literal> Timeout to connect to the database. The
          app fails if connection is not established within the specified time
          (even in daemon mode).
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>hana.host</literal> Hostname or IP address of the &hana; database host.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>hana.port</literal> Port through which  the &hana;
          database is accessible.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>hana.userkey</literal> Stored user key (see <xref linkend="sec-sol-monit-hana-db-stored-key"/>). Use this option if you do not
          want to store the password in the configuration file. The
          <literal>userkey</literal> and
          <literal>user/password</literal> are mutually exclusive. If both are
          set, <literal>hana.userkey</literal> takes priority.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>hana.user</literal> Existing user with access
          right to the &hana; database.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>hana.password</literal> Password of an existing
          user.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>hana.ssl</literal> Enable SSL connection (<option>false</option> by default). Only available for the <literal>dbapi</literal>
          connector.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>hana.ssl_validate_cert</literal> Enable SSL
          certification validation. This option is required by &hana;
          cloud. Only available for the <literal>dbapi</literal> connector.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>hana.aws_secret_name</literal> Secret name containing the
          username and password (see <xref linkend="sec-sol-monit-hana-db-aws-secret"/>. Use this option when &hana; database is
          stored on AWS. <literal>aws_secret_name</literal> and
          <literal>user/password</literal> are mutually exclusive. If both are
          set, <literal>aws_secret_name</literal> takes priority.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>logging.config_file</literal> Python logging
          system configuration file (by default, WARN and ERROR level
          messages are sent to the syslog).
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>logging.log_file</literal> Logging file
          (<filename>/var/log/hanadb_exporter.log</filename> by default)
        </para>
      </listitem>
    </itemizedlist>
    <para>
      The logging configuration file follows the
      <link
      xlink:href="https://docs.python.org/3/library/logging.config.html">Python
      standard logging system style</link>.
    </para>
    <para>
      Using the default configuration file, redirects the logs to the file
      specified in the JSON configuration file and to the syslog (only logging
      level up to WARNING).
    </para>
    </sect2>
    <sect2 xml:id="sec-sol-monit-hana-db-stored-key">
      <title>Using the stored user key</title>
      <para>
        Use this option to keep the database
        secure (you can use
        <literal>user/password</literal> with the
        <literal>SYSTEM</literal> user for development, as it is faster to set
        up). To use the <literal>userkey</literal> option, the
        <literal>dbapi</literal> must be installed (normally stored in
        <filename>/hana/shared/<replaceable>SID</replaceable>/hdbclient/hdbcli-N.N.N.tar.gz</filename>
        and installable with <package>pip3</package>). The key is stored in the client itself. To use a different client, you must create a new stored user key for the user running Python. To do that, use the following command (note that the
        <literal>hdbclient</literal> is the same as the
        <literal>dbapi</literal> Python package):
        </para>
<screen>/hana/shared/PRD/hdbclient/hdbuserstore set <replaceable>USER_KEY</replaceable> host:30013@SYSTEMDB hanadb_exporter pass</screen>
    </sect2>
    <sect2 xml:id="sec-sol-monit-hana-db-aws-secret">
      <title>Using AWS Secrets Manager</title>
      <para>
        Use the AWS Secrets Manager to store the login credentials outside the configuration file when the &hana; database is stored on AWS EC2 instance.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            Create a JSON
            <link xlink:href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_create-basic-secret.html">secret</link> file that contains two key-value pairs. The first pair contains the
            <literal>username</literal> key and the actual database user as the value. The second pair has the <literal>password</literal> key and the actual password as the value. For example:
          </para>
<screen>{
"&quot;"username&quot;: &quot;<replaceable>DATABASE_USER</replaceable>&quot;,
&quot;password&quot;: &quot;<replaceable>DATABASE_PASSWORD</replaceable>&quot;
}
</screen>
<para>
Use the actual secret as the secret name, and pass it in the configuration file
as a value for the <literal>aws_secret_name</literal> entry.
</para>
</listitem>
        <listitem>
          <para>
            Configure read-only access from EC2 IAM role to the secret by
            attaching a
            <link
            xlink:href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html">resource-based
            policy</link> to the secret. For example:
          </para>
<screen>
{
&quot;Version&quot; : &quot;2012-10-17&quot;,
&quot;Statement&quot; : [
  {
    &quot;Effect&quot;: &quot;Allow&quot;,
    &quot;Principal&quot;: {&quot;AWS&quot;: &quot;arn:aws:iam::123456789012:role/EC2RoleToAccessSecrets&quot;},
    &quot;Action&quot;: &quot;secretsmanager:GetSecretValue&quot;,
    &quot;Resource&quot;: &quot;*&quot;,
  }
]
}
</screen>
</listitem>
</itemizedlist>
      <para>
        Tips and recommendations:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Set <literal>SYSTEMDB</literal> as the default database for the exporter to get the tenants data.
          </para>
        </listitem>
        <listitem>
          <para>
            Do not use the stored user key created for the backup, because the key is created using the <literal>sidadm</literal> user.
          </para>
        </listitem>
        <listitem>
          <para>
          Instead of the <literal>SYSTEM</literal> user, use an account limited
          to accessing  the monitoring tables only.
          </para>
        </listitem>
        <listitem>
          <para>
          In case you use a user account with the monitoring role, this user must exist in all the databases (<literal>SYSTEMDB</literal> and tenants).
          </para>
        </listitem>
      </itemizedlist>
    </sect2>
    <sect2 xml:id="create-a-new-user-with-monitoring-role">
      <title>Create a new user with the monitoring role</title>
      <para>
        Run the following commands to create a user with the monitoring roles
        (the commands must be executed in all the databases):
      </para>
<screen>su - prdadm
hdbsql -u SYSTEM -p pass -d SYSTEMDB #(PRD for the tenant in this example)
CREATE USER HANADB_EXPORTER_USER PASSWORD MyExporterPassword NO FORCE_FIRST_PASSWORD_CHANGE;
CREATE ROLE HANADB_EXPORTER_ROLE;
GRANT MONITORING TO HANADB_EXPORTER_ROLE;
GRANT HANADB_EXPORTER_ROLE TO HANADB_EXPORTER_USER;
</screen>
    </sect2>
  <sect2 xml:id="running-the-exporter">
    <title>Running the exporter</title>
    <para>
      Start the exporter with the <command>hanadb_exporter -c config.json -m metrics.json</command> command.</para>
    <para>
      If the <filename>config.json</filename> configuration file is stored
      in the <literal>/etc/hanadb_exporter</literal> directory, the exporter can be started with the following command (note that the identifier matches with the <filename>config.json</filename> file without extension):
    </para>
<programlisting>hanadb_exporter --identifier config</programlisting>
</sect2>
    <sect2 xml:id="running-as-a-daemon">
      <title>Running as a service</title>
      <para>
        To run the hanadb_exporter as
        <literal>systemd</literal> service, install the exporter using the RPM
        package as described in
        <xref linkend="sec-sol-monit-hana-db-install"/>.
      </para>
      <para>
        Next, create the configuration file as
        <filename>/etc/hanadb_exporter/my-exporter.json</filename>. You can use the example file above as a starting point (the example file is also available in the
        <filename>/usr/etc/hanadb_exporter</filename> directory).
      </para>
      <para>
        You can use the example <filename>/usr/etc/hanadb_exporter/metrics.json</filename> metrics file.
      </para>
      <para>
        Adjust the default logging configuration file <filename>/usr/etc/hanadb_exporter/logging_config.ini</filename>.
      </para>
      <para>
        Start the exporter as a daemon. Because there are
        multiple hanadb_exporter instances running
        on one machine, you need to specify the name of the created configuration file, for example:
      </para>
<screen>&prompt.root;systemctl start prometheus-hanadb_exporter@my-exporter
&prompt.root;systemctl status prometheus-hanadb_exporter@my-exporter
&prompt.root;systemctl enable prometheus-hanadb_exporter@my-exporter</screen>
<important xml:id="note-prometheus-server-config">
<title>Configure the Prometheus server</title>
<para>
The exporter only exposes a port, without pushing the data to the Prometheus server. This means that the Prometheus server must be configured to periodically pull the data from the exporter. This is done by either adding the <literal>hanadb_exporter</literal> job to the Prometheus server configuration, or by adding <literal>hanadb_exporter</literal> to an existing job. For example:
</para>
<screen>- job_name: hana_db
    static_configs:
            - targets:
              - "<replaceable>HOSTNAME</replaceable>:<replaceable>PORT</replaceable>"</screen>
</important>
<important xml:id="note-firewall-config">
<title>Configure firewall</title>
<para>
Use the following command to open the port for <literal>hanadb_exporter</literal>.
</para>
<screen>&prompt.root;firewall-cmd --zone=<replaceable>ZONE</replaceable> --add-port=<replaceable>PORT</replaceable>/tcp --permanent
&prompt.root;firewall-cmd --reload
&prompt.root;firewall-cmd --list-all --zone=<replaceable>ZONE</replaceable></screen>
<para>
Replace <replaceable>ZONE</replaceable> with the actual interface used for the exporter, and <replaceable>PORT</replaceable> with the actual port number of <literal>hanadb_exporter</literal>(default is 9968).
</para>
</important>
    </sect2>
 </sect1>


 <sect1 xml:id="sec-sol-monit-ha-cluster-exp">
  <title>&ha; cluster exporter</title>

  <para>
   Enables monitoring of Pacemaker, &corosync;, SBD, DRBD and other components
   of &ha; clusters. Collects metrics to easily monitor cluster status and
   health.
  </para>

  <formalpara>
   <title>Link:</title>
   <para>
    <link xlink:href="https://github.com/ClusterLabs/ha_cluster_exporter"/>.
   </para>
  </formalpara>

  <itemizedlist>
   <title>Export metrics in the prometheus format</title>
   <listitem>
    <para>
     Pacemaker cluster summary, nodes and resources stats
    </para>
   </listitem>
   <listitem>
    <para>
     Corosync ring errors and quorum votes
    </para>
   </listitem>
   <listitem>
    <para>
     Health status of SBD devices.
    </para>
   </listitem>
   <listitem>
    <para>
     DRBD resources and connections status.
    </para>
   </listitem>
  </itemizedlist>

  <sect2 xml:id="sec-sol-monit-ha-cluster-exp-install">
   <title>Installation</title>
   <para>
    To install the &ha; cluster exporter on &sle;, run the <command>zypper
    install prometheus-ha_cluster_exporter</command> command.
   </para>
   <sect3 xml:id="sec-sol-monit-ha-cluster-exp-systemd">
    <title>Enabling &systemd; service</title>
    <para>
     The &ha; cluster exporter RPM packages comes with the
     <literal>ha_cluster_exporter.service</literal> &systemd; service. To
     enable and start it, use the following command:
    </para>
<screen>systemctl --now enable prometheus-ha_cluster_exporter</screen>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-sol-monit-ha-cluster-exp-use">
   <title>Using &ha; cluster exporter</title>
   <para>
    You can run the exporter on any of the cluster nodes. Although it is not
    strictly required, it is advisable to run the exporter on all nodes.
   </para>
   <para>
    The generated metrics are stored in the <literal>/metrics</literal> path.
    By default, the metrics can be accessed through the web interface on port
    9664.
   </para>
   <para>
    Although the exporter can run outside an &ha; cluster node, it cannot
    export any metric it is not able to collect. In this case, the exporter
    displays a warning message.
   </para>
  </sect2>

  <sect2 xml:id="sec-sol-monit-ha-cluster-exp-configure">
   <title>Configuring &ha; cluster exporter</title>
   <para>
   Before you proceed, make sure that the Prometheus server and the firewall are configured as described in <xref linkend="note-prometheus-server-config"/> and <xref linkend="note-firewall-config"/>
   </para>
   <para>
    The provided default configuration is designed specifically for the latest
    version of
    <phrase os="osuse">&opensuse;</phrase><phrase
        os="sles;sled">&sle;</phrase>.
    If necessary, any of the supported parameters can be modified either via
    command-line flags or via a configuration file. Use the
    <command>ha_cluster_exporter --help</command> command for more details on
    configuring parameters from the command line. Refer to the
    <filename>ha_cluster_exporter.yaml</filename> file for an example
    configuration.
   </para>
   <para>
    It is also possible to specify CLI flags via the
    <filename>/etc/sysconfig/prometheus-ha_cluster_exporter</filename> file.
   </para>
   <variablelist>
    <title>General flags</title>
    <varlistentry>
     <term>web.listen-address</term>
     <listitem>
      <para>
       Address to listen on for web interface and telemetry (default 9664).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>web.telemetry-path</term>
     <listitem>
      <para>
       Directory for storing metrics data (default
       <filename>/metrics</filename>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>web.config.file</term>
     <listitem>
      <para>
       Path to a the web configuration file (default
       <filename>/etc/ha_cluster_exporter.web.yaml</filename>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>log.level</term>
     <listitem>
      <para>
       Logging verbosity (default <literal>info</literal>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>version</term>
     <listitem>
      <para>
       Print version information.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <variablelist>
    <title>Collector flags</title>
    <varlistentry>
     <term>crm-mon-path</term>
     <listitem>
      <para>
       Path to the <filename>crm_mon</filename> executable (default
       <filename>/usr/sbin/crm_mon</filename>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cibadmin-path</term>
     <listitem>
      <para>
       Path to the <filename>cibadmin</filename> executable (default
       <filename>/usr/sbin/cibadmin</filename>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>corosync-cfgtoolpath-path</term>
     <listitem>
      <para>
       Path to the <filename>corosync-cfgtool</filename> executable (default
       <filename>/usr/sbin/corosync-cfgtool</filename>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>corosync-quorumtool-path</term>
     <listitem>
      <para>
       Path to the <filename>corosync-quorumtool</filename> executable (default
       <filename>/usr/sbin/corosync-quorumtool</filename>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>sbd-path</term>
     <listitem>
      <para>
       Path to the <filename>sbd</filename> executable (default
       <filename>/usr/sbin/sbd</filename>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>sbd-config-path</term>
     <listitem>
      <para>
       Path to the sbd configuration (default
       <filename>/etc/sysconfig/sbd/</filename>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>drbdsetup-path</term>
     <listitem>
      <para>
       Path to the <filename>drbdsetup</filename> executable (default
       <filename>/sbin/drbdsetup</filename>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>drbdsplitbrain-path</term>
     <listitem>
      <para>
       Path to the <filename>drbd splitbrain</filename> hooks temporary files
       (default <filename>/var/run/drbd/splitbrain</filename>).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-sol-monit-ha-cluster-exp-tls">
   <title>TLS and basic authentication</title>
   <para>
    The &ha; cluster exporter supports TLS and basic authentication. To use TLS
    or basic authentication, specify a configuration file using the
    <option>--web.config.file</option> parameter. The format of the file is
    described in
    <link
          xlink:href="https://github.com/prometheus/exporter-toolkit/blob/master/docs/web-configuration.md"/>.
   </para>
  </sect2>

  <sect2 xml:id="sec-sol-monit-ha-cluster-exp-metrics">
   <title>Metrics specification</title>
   <para>
    The following provides an overview of metrics generated by the &ha; cluster
    exporter.
   </para>
   <formalpara>
    <title>Pacemaker</title>
    <para>
     The Pacemaker subsystem collects an atomic snapshot of the &ha; cluster
     directly from the XML CIB of Pacemaker using <package>crm_mon</package>.
    </para>
   </formalpara>
   <variablelist>
    <title>Pacemaker</title>
    <varlistentry>
     <term>ha_cluster_pacemaker_config_last_change</term>
     <listitem>
      <para>
       A Unix timestamp in seconds converted to a floating number, corresponding
       to the last time Pacemaker configuration changed.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_pacemaker_fail_count</term>
     <listitem>
      <para>
       The fail count per node and resource ID.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_pacemaker_location_constraints</term>
     <listitem>
      <para>
       Resource location constraints.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>constraint</literal> A unique string identifier of the
         constraint
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>node</literal> The node the constraint applies to
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>resource</literal> The resource the constraint applies to
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>role</literal> The resource role the constraint applies to
         (if any)
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_pacemaker_migration_threshold</term>
     <listitem>
      <para>
       The number of migration threshold for each node and resource ID set by a
       Pacemaker cluster.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_pacemaker_nodes</term>
     <listitem>
      <para>
       The status of each node in the cluster (one line for the status of every
       node). 1 indicates the node is in the status specified by the status
       label, 0 means it is not.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>node</literal> The name of the node (normally the hostname)
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>status</literal> Possible values: <literal>standby</literal>,
         <literal>standby_onfail</literal>, <literal>maintenance</literal>,
         <literal>pending</literal>, <literal>unclean</literal>,
         <literal>shutdown</literal>, <literal>expected_up</literal>,
         <literal>dc</literal>
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>type</literal> Possible values: <literal>member</literal>,
         <literal>ping</literal>, <literal>remote</literal>
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_pacemaker_node_attributes</term>
     <listitem>
      <para>
       This metric exposes in its labels raw, opaque, cluster metadata, called
       node attributes that often leveraged by Resource Agents. The value of
       each line is always 1.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>node</literal> The name of the node (normally the hostname)
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>name</literal> The name of the attribute
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>value</literal> The value of the attribute
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_pacemaker_resources</term>
     <listitem>
      <para>
       The status of each resource in the cluster (one line for the status of each resource). 1 means the resource is in the status
       specified by the status label, 0 means that it is not.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>agent</literal> The name of the resource agent for the
         resource
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>clone</literal> The name of the clone this resource belongs
         to (if any)
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>group</literal> The name of the group this resource belongs
         to, (if any)
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>managed</literal> Can be either <literal>true</literal> or
         <literal>false</literal>
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>node</literal> The name of the node hosting the resource
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>resource</literal> The unique resource name
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>role</literal> Possible values: <literal>started</literal>,
         <literal>stopped</literal>, <literal>master</literal>,
         <literal>slave</literal> or one of <literal>starting</literal>,
         <literal>stopping</literal>, <literal>migrating</literal>,
         <literal>promoting</literal>, <literal>demoting</literal>
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_pacemaker_stonith_enabled</term>
     <listitem>
      <para>
       Whether or not stonith is enabled in the cluster. The value is either 1
       or 0.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <formalpara>
    <title>Corosync</title>
    <para>
     The Corosync subsystem collects cluster quorum votes and ring status by
     parsing the output of <package>corosync-quorumtool</package> and
     <package>corosync-cfgtool</package>.
    </para>
   </formalpara>
   <variablelist>
    <title>Corosync</title>
    <varlistentry>
     <term>ha_cluster_corosync_member_votes</term>
     <listitem>
      <para>
       The number of votes each member node has contributed to the current
       quorum.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>node_id</literal> The internal corosync identifier associated
         with the node
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>node</literal> The name of the node (normally the hostname)
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>local</literal> Indicates whether the node is local
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_corosync_quorate</term>
     <listitem>
      <para>
       Indicates whether the cluster is quorate. The value is either 1 or 0
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_corosync_quorum_votes</term>
     <listitem>
      <para>
       Cluster quorum votes (one line per type).
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>type</literal> Possible values:
         <literal>expected_votes</literal>,
         <literal>highest_expected</literal>, <literal>total_votes</literal>,
         <literal>quorum</literal>.
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_corosync_ring_errors</term>
     <listitem>
      <para>
       The total number of faulty Corosync rings.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_corosync_rings</term>
     <listitem>
      <para>
       The status of each Corosync ring. 1 is healthy, 0 is faulty.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>ring_id</literal> The internal Corosync ring identifier
         (normally corresponds to the first member node to join)
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>node_id</literal> The internal Corosync identifier of the
         local node
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>number</literal> The ring number
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>address</literal> the IP address locally linked to this ring
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
   </variablelist>
   <formalpara>
    <title>SBD</title>
    <para>
     The SBD subsystems collect statistics of each device by parsing its
     configuration and the output of <command>sbd --dump</command>.
    </para>
   </formalpara>
   <variablelist>
    <title>SBD</title>
    <varlistentry>
     <term>ha_cluster_sbd_devices</term>
     <listitem>
      <para>
       The SBD devices in the cluster (one line per device). The line is either
       absent or has the value of 1.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>device</literal> The path of the SBD device
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>status</literal> Possible values: <literal>healthy</literal>,
         <literal>unhealthy</literal>
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_sbd_timeouts</term>
     <listitem>
      <para>
       The SBD timeouts for each SBD device.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>device</literal> The path of the SBD device
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>type</literal> Possible values: <literal>watchdog</literal>,
         <literal>msgwait</literal>
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
   </variablelist>
   <formalpara>
    <title>DRBD</title>
    <para>
      The DRDB subsystem runs a special <command>drbdsetup</command> command to
      get the current status of a DRDB cluster in the JSON format.
    </para>
   </formalpara>
   <variablelist>
    <title>DRBD</title>
    <varlistentry>
     <term>ha_cluster_drbd_connections</term>
     <listitem>
      <para>
       The DRBD resource connections (one line per <literal>resource</literal>
       and per
       <literal>peer_node_id</literal>). The line is either absent or has the
       value of 1.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The resource the connection is for
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>peer_node_id</literal> The id of the node this connection is
         for
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>peer_role</literal> Possible values:
         <literal>primary</literal>,
         <literal>secondary</literal><literal>unknown</literal>
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>peer_disk_state</literal> Possible values
         <literal>attaching</literal>, <literal>failed</literal>,
         <literal>negotiating</literal>, <literal>inconsistent</literal>,
         <literal>outdated</literal>, <literal>unknown</literal>,
         <literal>consistent</literal>, <literal>uptodate</literal>
        </para>
       </listitem>
      </itemizedlist>
      <para>
       The total number of lines for this metric is the cardinality of
       <literal>resource</literal> multiplied by the cardinality of
       <literal>peer_node_id</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_connections_sync</term>
     <listitem>
      <para>
       The DRBD disk connections in sync percentage. Values are floating
       numbers between 0 and 100.00.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The resource the connection is for
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>peer_node_id</literal> The id of the node this connection is
         for
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_connections_received</term>
     <listitem>
      <para>
       Volume of net data received from the partner via the network connection
       in KiB (one line per <literal>resource</literal>
       and per
       <literal>peer_node_id</literal>). The value is an
       integer greater than or equal to 0.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The resource the connection is for
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>peer_node_id</literal> The id of the node this connection is
         for
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_connections_pending</term>
     <listitem>
      <para>
       Number of requests sent to the partner that have not yet been received
       (one line per <literal>resource</literal>
       and per
       <literal>peer_node_id</literal>). The value is an
       integer greater than or equal to 0.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The resource the connection is for
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>peer_node_id</literal> The id of the node this connection is
         for
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_connections_unacked</term>
     <listitem>
      <para>
       Number of requests received by the partner but have not yet been
       acknowledged (one line per <literal>resource</literal>
       and per
       <literal>peer_node_id</literal>). The value is
       an integer greater than or equal to 0.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The resource the connection is for
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>peer_node_id</literal> The id of the node this connection is
         for
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_resources</term>
     <listitem>
      <para>
       The DRBD resources (one line per name and per volume). The line is either
       absent or has the value of 1.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The name of the resource
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>role</literal> Possible values: <literal>primary</literal>,
         <literal>secondary</literal>, <literal>unknown</literal>
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>disk_state</literal> Possible values:
         <literal>attaching</literal>, <literal>failed</literal>,
         <literal>negotiating</literal>, <literal>inconsistent</literal>,
         <literal>outdated</literal>, <literal>outdated</literal>,
         <literal>unknown</literal>, <literal>consistent</literal>,
         <literal>uptodate</literal>
        </para>
       </listitem>
      </itemizedlist>
      <para>
       The total number of lines for the metric is the cardinality of
       <literal>name</literal> multiplied by the cardinality of
       <literal>volume</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_written</term>
     <listitem>
      <para>
       Amount of data in KiB written to the DRBD resource (one line per
       resource and per volume) The value is an integer greater than or equal
       to 0.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The name of the resource
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_read</term>
     <listitem>
      <para>
       Amount of data in KiB read from the DRBD resource (one line per resource
       and per volume) The value is an integer greater than or equal to 0.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The name of the resource
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_al_writes</term>
     <listitem>
      <para>
       Number of updates of the activity log area of the meta data (one line
       per resource and per volume). The value is an integer greater than or
       equal to 0.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The name of the resource
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_bm_writes</term>
     <listitem>
      <para>
       Number of updates of the bitmap area of the metadata (one line per
       resource and per volume). The value is an integer greater than or equal
       to 0.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The name of the resource
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_upper_pending</term>
     <listitem>
      <para>
       Number of block I/O requests forwarded to DRBD but not yet answered by
       DRBD (one line per resource and per volume). The value is an integer
       greater than or equal to 0.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The name of the resource
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_lower_pending</term>
     <listitem>
      <para>
       Number of open requests to the local I/O sub-system issued by DRBD (one
       line per resource and per volume). The value is an integer greater than
       or equal to 0.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The name of the resource
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_quorum</term>
     <listitem>
      <para>
       Quorum status of the DRBD resource according to the configured quorum
       policies (one line per resource and per volume). The value is 1 when
       quorate, or 0 when inquorate.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The name of the resource
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_drbd_split_brain</term>
     <listitem>
      <para>
       Signals when there is a split brain occurring per resource and volume.
       The line is either absent or has the value of 1. To make this metric work
       you must setup a DRBD custom split-brain handler.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>resource</literal> The name of the resource
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>volume</literal> The volume number
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
   </variablelist>
   <formalpara>
    <title>Scrape</title>
    <para>
     The scrape subsystem is a generic namespace dedicated to internal
     instrumentation of the exporter itself.
    </para>
   </formalpara>
   <variablelist>
    <title>Scrape</title>
    <varlistentry>
     <term>ha_cluster_scrape_duration_seconds</term>
     <listitem>
      <para>
       The duration of a collector scrape in seconds.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>collector</literal> collector names that correspond to the
         subsystem they collect metrics from
        </para>
       </listitem>
      </itemizedlist>
      <para>
       Example:
      </para>
<screen># TYPE ha_cluster_scrape_duration_seconds gauge
ha_cluster_scrape_duration_seconds{collector="pacemaker"} 1.234</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ha_cluster_scrape_success</term>
     <listitem>
      <para>
       Indicates whether a collector succeeded. Collectors can fail gracefully,
       but that does not prevent them from running. If certain metrics cannot
       be scraped, the value of this metric is 0. In this case, the exporter
       logs for more details.
      </para>
      <itemizedlist>
       <title>Labels</title>
       <listitem>
        <para>
         <literal>collector</literal> collector names that correspond to the
         subsystem they collect metrics from
        </para>
        <para>
         Example:
        </para>
<screen># TYPE ha_cluster_scrape_success gauge
ha_cluster_scrape_success{collector="pacemaker"} 1</screen>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-sol-monit-sap-host-exporter">
  <title>&sap; Host exporter</title>
  <para>
    &sap; Host exporter is a &prometheus; exporter that enables monitoring of &sap; systems (&netweaver; applications).
  </para>
  <para>
    It is a stateless exporter that retrieves runtime data from the &sap; system
    via the SAPControl Web interface on each HTTP request. Exported data
    include start service processes, Enqueue Server stats, and AS Dispatcher
    work process queue stats.
  </para>

  <important>
    <title>Note about metrics</title>
    <para>
      The exporter does not export metrics that it cannot collect. However,
      as it is irrelevant for the exporter which subsystems are present in the monitored target, failing to collect metrics is not considered a critical failure. However, when certain collectors fail to either register or perform collect cycles, a warning is added to the log. The <filename>metrics.md</filename> file that ships with the RPM package provides information about the exported metrics. The file is also available in the project's <link xlink:href="https://github.com/SUSE/sap_host_exporter">GitHub repository</link>.
    </para>
  </important>

  <itemizedlist>
    <title>Exported metrics (for &s4h;, &netweaver;, or &hana; hosts)</title>
    <listitem>
     <para>
      &sap; start service process list
     </para>
    </listitem>
    <listitem>
     <para>
      &sap; enqueue server metrics
     </para>
    </listitem>
    <listitem>
     <para>
      &sap; application server dispatcher metrics
     </para>
    </listitem>
    <listitem>
     <para>
      &sap; internal alerts
     </para>
    </listitem>
   </itemizedlist>

  <sect2 xml:id="sec-sol-monit-sap-host-exporter-install">
    <title>Installation</title>
    <para>
      The exporter can be installed using the <package>RPM</package> from the <link xlink:href="https://build.opensuse.org/package/show/server:monitoring/prometheus-sap_host_exporter">Open Build Service</link>. To do this, use the following commands (replace <replaceable>VERSION</replaceable> with the exact version of the target system, for example: <literal>SLE_15_SP4</literal>):
    </para>
<screen>&prompt.root;zypper addrepo https://download.opensuse.org/repositories/server:/monitoring/<replaceable>VERSION</replaceable>/server:monitoring.repo
&prompt.root;zypper install prometheus-sap_host_exporter</screen>

<para>
  The RPM package ships with an accompanying &systemd; unit file that can be enabled using the following command:
</para>

<screen>systemctl --now enable prometheus-sap_host_exporter</screen>

<para>
  Alternatively, you can compile and install the exporter from the source code:
</para>
<screen>&prompt.user;git clone https://github.com/SUSE/sap_host_exporter
&prompt.user;cd sap_host_exporter
&prompt.user;make
&prompt.user;sudo make install</screen>
<note>
  <para>
    You can deploy a full &netweaver; cluster via Terraform using <link xlink:href="https://github.com/SUSE/ha-sap-terraform-deployments">&suse; automated &sap;/HA deployments</link>. This automatically installs and configures the exporter and the entire &prometheus; monitoring stack.
  </para>
</note>
  </sect2>
  <sect2 xml:id="sec-sol-monit-sap-host-exporter-use">
    <title>Using &sap; Host exporter</title>
    <para>
      You can run the exporter using the following command:
    </para>
<screen>./sap_host_exporter --sap-control-url <replaceable>SAP_HOST</replaceable>:<replaceable>SAP_CONTROL_PORT</replaceable></screen>

<para>
  While it is possible to use the exporter to retrieve data from a remote &sap; host, it is recommended to run the exporter locally on the target &sap; host, and then connect to the SAPControl Web service via Unix domain sockets:
</para>

<screen>./sap_host_exporter --sap-control-uds /tmp/.sapstream50013</screen>

<para>
By default, the exporter exposes the metrics in the <filename>/metrics</filename> path, on port 9680.
    </para>
  </sect2>
  <sect2 xml:id="sec-sol-monit-sap-host-exporter-config">
    <title>Configuring &sap; Host exporter</title>
    <para>
      You can provide optional runtime parameters using command-line flags or via a configuration file. Run the <command>sap_host_exporter --help</command> to view the available flags.
    </para>
<para>
The exporter expects to find the <filename>sap_host_exporter.yaml</filename>, <filename>sap_host_exporter.json</filename>, or <filename>sap_host_exporter.toml</filename> file either in the current working directory, or in one of the following directories: <filename>$HOME/.config</filename>, <filename>/etc</filename>, <filename>/usr/etc</filename>. The first match has precedence, and the command-line flags have precedence over the configuration file.
</para>
<para>
  An example YAML configuration file ships with the RPM package. You can also find the example configuration file in the project's <link xlink:href="https://github.com/SUSE/sap_host_exporter">GitHub repository</link>.
</para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-sol-monit-more">
  <title>Additional information</title>

  <itemizedlist>
   <listitem>
    <para>
     <link xlink:href="https://documentation.suse.com/suma/4.0/"
            >&suma;</link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="https://grafana.com/grafana/dashboards?orderBy=name&amp;direction=asc"
            >Grafana
     Dashboards</link>
    </para>
   </listitem>
   <listitem>
    <para>
     Some <filename class="extension">.md</filename> files are included in RPM
     packages. They contain documentation from upstream sources. This can be
     helpful in isolated data centers without Internet connection.
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="https://techcommunity.microsoft.com/t5/running-sap-applications-on-the/suse-amp-microsoft-collaborates-to-provide-sap-monitoring/ba-p/1571926">&suse;
     &amp; Microsoft collaborates to provide SAP monitoring</link>
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <xi:include href="common_copyright_quick.xml"/>
 <xi:include href="common_legal.xml"/>
</article>
