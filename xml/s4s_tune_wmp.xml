<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook"  xml:id="cha-memory-protection"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
 <title>Tuning &wmp;</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  Keeping &sap; applications in physical memory is essential for their
  performance. In older product versions, the Page Cache Limit prevented a swap
  out to disk by a growing page cache (in &productname; 11 SP1 onwards and in
  &productname; 12). In &productname; 15, the Page Cache Limit has been
  replaced by the more advanced &wmp;.
 </para>
 <para>
  &wmp; puts &sap; instances into a dedicated cgroup (v2) and tells the kernel,
  by the <varname>memory.low</varname> parameter, the amount of memory to keep
  in physical memory. This protects the processes in this cgroup against any
  form of memory pressure outside that cgroup, including a growing page cache.
  &wmp; cannot protect against memory pressure inside this cgroup. It covers
  the memory of <emphasis>all</emphasis> instances together on one host.
 </para>
 <para>
  The value for <varname>memory.low</varname> depends on the kind of &sap;
  instance and the workload and needs to be configured manually. If the system
  is under extreme pressure, the Linux kernel will ignore the
  <varname>memory.low</varname> value and try to stabilize the whole system,
  even by swapping or invoking the OOM killer.
 </para>
 <para>
  For more information about cgroups, see
  <link xlink:href="https://documentation.suse.com/sles-15/html/SLES-all/cha-tuning-cgroups.html"/>.
 </para>
 <sect1 xml:id="sec-memory-protection-architecture">
  <title>Architecture</title>

  <para>
   WMP relies on two components:
  </para>

  <variablelist>
   <varlistentry>
    <term>cgroup2 memory controller (Linux kernel)</term>
    <listitem>
     <para>
      The cgroup2 memory controller parameter <parameter>memory.low</parameter>
      allows defining an amount of memory, which the Linux kernel will keep in
      physical memory. This amount of memory will be excluded from the
      reclaiming process unless the entire system is in a critical memory
      situation.
     </para>
     <para>
      WMP uses <parameter>memory.low</parameter> to prevent memory from SAP
      processes from being paged or swapped out to disk. Apart from the memory
      controller, cgroup1 controllers are still available, but are not mounted
      any more.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>&systemd;</term>
    <listitem>
     <para>
      &systemd; provides the infrastructure to create and maintain the cgroup
      hierarchy and allows the configuration of cgroup parameters. WMP ships
      &systemd; configuration files to allow easy configuration of
      <parameter>memory.low</parameter> via &systemd; methods.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-memory-protection-support">
  <title>Support for &wmp;</title>

  <para>
   WMP is supported for &productname; &productnumber; on &x86-64; and &power;
   for one or multiple &sap; systems on one host, such as App Server (&netweaver;, &s4h;). &suse; &ha; cluster solutions are supported.
  </para>

  <para>
   &wmp; does not cover databases other than &hana;. Depending on their start
   method, the processes might run inside or outside the dedicated cgroup. If
   they run inside, the memory consumption needs to be taken into account when
   determining <varname>memory.low</varname>.
  </para>

  <important>
   <title>Restrictions of WMP</title>
   <para>
    Using WMP comes with benefits, but you should be aware of certain
    restrictions:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      WMP cannot protect against memory pressure inside the dedicated cgroup.
     </para>
    </listitem>
    <listitem>
     <para>
      WMP cannot protect &sap; systems or their instances from each other. All
      &sap; processes share the same memory limit. If you have multiple &sap;
      systems (for example, &netweaver; and &s4h;), WMP cannot shield one &sap;
      application from the other.
     </para>
    </listitem>
   </itemizedlist>
  </important>
  <para>
    To use Workload Memory Protection, the &sap; system must use &systemd;.
    Details about the &systemd; integration can be found in <link
    xlink:href="https://launchpad.support.sap.com/%3Cmark%3E/notes/3139184">SAP
    Notes: 139184 - Linux: systemd integration for sapstartsrv</link> and <link
    xlink:href="https://launchpad.support.sap.com/%3C/mark%3E/notes/3189534">SAP
    Host Agent and 3189534 - Linux: systemd integration for sapstartsrv and SAP
    HANA</link>.
  </para>
  <important>
  <para>
    Starting with sles4sap 15 SP5, the package <package>sapwmp</package> is
    deprecated. For infomation about migration, see <xref linkend="sec-sapwmp-migrate" />.
  </para>
  </important>
 </sect1>
 <sect1 xml:id="sec-memory-protection-setup">
  <title>Setting up &wmp;</title>

  <remark>toms 2020-09-28: Some introduction para is missing here.</remark>

  <sect2 xml:id="sec-memory-protection-setup-preparation">
   <title>Preparing for &wmp;</title>
   <para>
    The &sap; Start Service puts &sap; instances into the dedicated
    <literal>SAP.slice</literal> cgroup. To use &wmp;, switch to the unified cgroup2 hierarchy and set <varname>MemoryLow=</varname> correctly.
   </para>
   <procedure>
    <step>
     <para>
      Stop all &sap; instances and the &sap; Host Agent.
     </para>
     <para>
      The service can be enabled, but all &sap; processes need to be
      terminated.
     </para>
    </step>
    <step>
     <para>
      Add <varname>systemd.unified_cgroup_hierarchy=true</varname> to the
      kernel command line by adding it to
      <varname>GRUB_CMDLINE_LINUX_DEFAULT</varname> in
      <filename>/etc/default/grub</filename> like:
     </para>
<screen>GRUB_CMDLINE_LINUX_DEFAULT="... systemd.unified_cgroup_hierarchy=true swapaccount=1"</screen>
     <para>
      With this change, only cgroup2 controllers are be mounted on
      <filename>/sys/fs/cgroup</filename>. Cgroup1 controllers, except the
      memory controller, are still available and can be used though. Tools
      using cgroup1 may not work out of the box any more and may need
      reconfiguration. Also, the required mount structure for cgroup1 needs to
      be provided.
     </para>
     <para>
      The parameter <varname>swapaccount=1</varname> is not needed for WMP to
      work, but it aids the analysis in support cases to show the amount of
      swapped out memory for each cgroup.
     </para>
    </step>
    <step>
     <para>
      Rewrite the GRUB2 configuration:
     </para>
<screen>&prompt.sudo;<command>grub2-mkconfig</command> -o /boot/grub2/grub.cfg</screen>
     <para>
      After reboot (which is perfromed later), the cgroup hierarchy is switched to v2
      (unified hierarchy) only.
     </para>
    </step>
    <step xml:id="st-conf-memorylow-sap-slice">
     <para>
      Configure <varname>MemoryLow</varname> for the
      <systemitem>SAP.slice</systemitem>:
     </para>
<screen>&prompt.sudo;<command>systemctl</command> set-property SAP.slice MemoryLow=...</screen>
     <para>
      This command creates a drop-in in
      <filename>/etc/systemd/system.control/SAP.slice.d/</filename> to set
      <varname>MemoryLow</varname>.
     </para>
     <para>
      <systemitem>SAP.slice</systemitem> s the name of the cgroup which contains
      the SAP processes. <varname>MemoryLow</varname> is the &systemd;
      equivalent of the cgroup parameter
      <varname>memory.low</varname> mentioned in the introduction. The value
      for <varname>MemoryLow</varname> depends on the type of the &sap;
      application and the workload.
     </para>
     <variablelist>
      <varlistentry>
       <term>For &hana;</term>
       <listitem>
        <para>
         Since &hana; has a Global Allocation Limit, its value can be used
         directly.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>&sap; Application Server (&netweaver;, &s4h;)</term>
       <listitem>
        <para>
         For the Application Server, the sizing for the workload should
         indicate the value for <varname>MemoryLow</varname>.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
     <para>
      Keep in mind the following.
     </para>
     <itemizedlist>
      <listitem>
       <para>
        All SAP instances on one host are inside the
        <systemitem>SAP.slice</systemitem>. <varname>MemoryLow</varname> must
        cover the amount of memory of <emphasis>all</emphasis> instances
        together on that host. You cannot protect &sap; systems or their
        instances from each other.
       </para>
      </listitem>
      <listitem>
       <para>
        If you are using a database other than &hana;, some database processes
        can be part of <systemitem>SAP.slice</systemitem>. Their memory
        consumption needs to be taken into account when determining the
        <varname>MemoryLow</varname> value.
       </para>
      </listitem>
      <listitem>
       <para>
        Never choose a value for <varname>MemoryLow</varname> very close to or
        larger than your physical memory. System services and additional
        installed software require memory too. If they are forced to use swap
        too extensively, at the expense of the &sap; application, your system
        can become unresponsive.
       </para>
      </listitem>
     </itemizedlist>
     <note>
      <title>Correctly calculate <varname>MemoryLow</varname> value</title>
      <para>
       <varname>MemoryLow</varname> takes the memory size in bytes. If the
       value is suffixed with K, M, G, or T, the specified memory size is
       parsed as Kibibytes, Mebibytes, Gibibytes, or Tebibytes (with the base
       1024 instead of 1000, see
       <link xlink:href="https://en.wikipedia.org/wiki/Binary_prefix"/>),
       respectively. Alternatively, a percentage value may be specified, which
       is taken relative to the installed physical memory on the system.
      </para>
      <para>
       The underlying cgroup memory controller rounds up the value to a
       multiple of the page size. To avoid confusion, set the value for
       <varname>MemoryLow</varname> to a multiple of the page size.
      </para>
     </note>
    </step>
   </procedure>
   <para>
    Now the system is ready for a reboot.
   </para>
  </sect2>

  <sect2 xml:id="sec-memory-protection-reboot-and-verification">
   <title>Reboot and verification</title>
   <remark>toms 2020-09-16: introduction of the procedure is missing.</remark>
   <procedure>
    <step>
     <para>
      Reboot the system.
     </para>
    </step>
    <step>
     <para>
      After rebooting, verify that cgroups v2 has indeed been used:
     </para>
<screen>&prompt.root;<command>grep</command>  cgroup /proc/mounts
cgroup /sys/fs/cgroup cgroup2 rw,nosuid,nodev,noexec,relatime 0 0</screen>
    </step>
    <step>
     <para>
      Verify that the low memory value has been set:
     </para>
<screen>&prompt.user;<command>systemctl</command> show -p MemoryLow SAP.slice
MemoryLow=18487889920    &lt;- Should be your chosen value (always in bytes)!

# cat /sys/fs/cgroup/SAP.slice/memory.low
18487889920    &lt;- Should be your chosen value!</screen>
     <para>
      The variable <varname>MemoryLow</varname> can be set to any value, but
      the content of the variable is always a multiple of the page size. Keep
      this in mind if you notice a slight difference between the values.
     </para>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-memory-protection-operation-change-the-value-of-memorylow">
  <title>Changing the value of MemoryLow</title>

  <para>
   To change the value of <varname>MemoryLow</varname> run:
  </para>

<screen>&prompt.root;<command>systemctl</command> set-property SAP.slice MemoryLow=...</screen>

  <para>
   The changes takes effect immediately.
  </para>

  <para>
   The underlying cgroup memory controller rounds up the value to a
   multiple of the page size. To avoid confusion, set the value of
   <varname>MemoryLow</varname> to a multiple of the page size.
  </para>

  <important>
   <title>Value of <varname>MemoryLow</varname></title>
   <para>
    Never set <varname>MemoryLow</varname> to a value lower than the memory
    already accounted in <systemitem>SAP.slice</systemitem>. To check, run:
   </para>
<screen>&prompt.root;<command>systemctl</command> show -p MemoryCurrent SAP.slice</screen>
  </important>
  </sect1>
 <sect1 xml:id="sec-sapwmp-migrate">
  <title>Migration from &wmp; using <package>sapwmp</package> (SLES for &sles4sap; 15 SP4 and
  earlier)</title>
  <para>
    It is necessary to perform a migration when you are upgrading from a Service Pack SP4 or earlier, and you have not yet switched to &systemd;-enabled instances.
    </para>
    <procedure>
    <title>Migration procedure</title>
    <step>
    <para>
      Switch to a &systemd;-enabled &sap; system. For more info, refer to <link
      xlink:href="https://launchpad.support.sap.com/%3C/mark%3E/notes/3189534">139184
      - Linux: systemd integration for sapstartsrv and SAP Host Agent and
      3189534 - Linux: systemd integration for sapstartsrv and SAP HANA</link>.
    </para>
    </step>
    <step>
    <para>
      Remove the lines calling <option>sapwmp-capture</option> from all instance profiles (for example: <command>Execute_20 = local /usr/lib/sapwmp/sapwmp-capture -a</command>. All &sap; services require restart after the change.
    </para>
    </step>
    <step>
    <para>
      Monitor and readjust <option>MemoryLow=</option>. A &systemd;-enabled &sap; Host Agent now has a cgroup (<systemitem class="service">saphostagent.service</systemitem>) below <systemitem class="service">SAP.slice</systemitem>, and it is accounted for protection.
    </para>
    <note>
    <para>
      It is not necessary to set <option>MemoryLow=infinity</option> for each &sap; service or the &sap; Host Agent service, if the <systemitem>cgroup2</systemitem> mount has the option <option>memory_recursiveprot</option> set (it is set by default). To check that, run the following command:
    </para>
      <screen>&prompt.user; mount | grep cgroup2
      cgroup2 on /sys/fs/cgroup type cgroup2
      (rw,nosuid,nodev,noexec,relatime,nsdelegate,memory_recursiveprot)</screen>
    </note>
    </step>
    </procedure>
  </sect1>
</chapter>
