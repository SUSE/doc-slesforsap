<?xml version="1.0"?>
<!DOCTYPE chapter [
  <!ENTITY % entities SYSTEM "generic-entities.ent">
  %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="cha-memory-protection" version="5.0">
 <title>Tuning &wmp;</title>
 <info xmlns:d="http://docbook.org/ns/docbook">
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 <revhistory xml:id="rh-cha-memory-protection">
   <revision>
     <date>2024-10-15</date>
     <revdescription>
       <para/>
     </revdescription>
   </revision>
 </revhistory>
</info>
 <para>
  Keeping &sap; applications in physical memory is essential for their
  performance. In older product versions, the Page Cache Limit prevented a swap
  out to disk by a growing page cache (in &productname; 11 SP1 onwards and in
  &productname; 12). In &productname; 15, the Page Cache Limit has been
  replaced by the more advanced &wmp;.
 </para>
 <para>
  &wmp; puts &sap; instances into a dedicated cgroup (v2) and tells the kernel,
  by the <varname>memory.low</varname> parameter, the amount of memory to keep
  in physical memory. This protects the processes in this cgroup against any
  form of memory pressure outside that cgroup, including a growing page cache.
  &wmp; cannot protect against memory pressure inside this cgroup. It covers
  the memory of <emphasis>all</emphasis> instances together on one host.
 </para>
 <para>
  The value for <varname>memory.low</varname> depends on the kind of &sap;
  instance and the workload and needs to be configured manually. If the system
  is under extreme pressure, the Linux kernel will ignore the
  <varname>memory.low</varname> value and try to stabilize the whole system,
  even by swapping or invoking the OOM killer.
 </para>
 <para>
  For more information about cgroups, see
  <link xlink:href="https://documentation.suse.com/sles/html/SLES-all/cha-tuning-cgroups.html"/>.
 </para>
 <sect1 xml:id="sec-memory-protection-architecture">
  <title>Architecture</title>

  <para>
   &wmp; relies on two components:
  </para>

  <variablelist>
   <varlistentry>
    <term>cgroup2 memory controller (Linux kernel)</term>
    <listitem>
     <para>
      The cgroup2 memory controller parameter <parameter>memory.low</parameter>
      allows defining an amount of memory, which the Linux kernel will keep in
      physical memory. This amount of memory will be excluded from the
      reclaiming process unless the entire system is in a critical memory
      situation.
     </para>
     <para>
      &wmp; uses <parameter>memory.low</parameter> to prevent memory from SAP
      processes from being paged or swapped out to disk. Apart from the memory
      controller, cgroup1 controllers are still available, but are not mounted
      any more.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>&systemd;</term>
    <listitem>
     <para>
      &systemd; provides the infrastructure to create and maintain the cgroup
      hierarchy and allows the configuration of cgroup parameters.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-memory-protection-support">
  <title>Support for &wmp;</title>

  <para>
   &wmp; is supported for &productname; &productnumber; on &x86-64; and &power;
   for one or multiple &sap; systems on one host, such as App Server (&netweaver;, &s4h;). &suse; &ha; cluster solutions are supported.
  </para>

  <para>
   &wmp; does not cover databases other than &hana;. Depending on their start
   method, the processes might run inside or outside the dedicated cgroup. If
   they run inside, the memory consumption needs to be taken into account when
   determining <varname>memory.low</varname>.
  </para>

  <important>
   <title>Restrictions of &wmp;</title>
   <para>
    Using &wmp; comes with benefits, but you should be aware of certain
    restrictions:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      &wmp; cannot protect against memory pressure inside the dedicated cgroup.
     </para>
    </listitem>
    <listitem>
     <para>
      &wmp; cannot protect &sap; systems or their instances from each other. All
      &sap; processes share the same memory limit. If you have multiple &sap;
      systems (for example, &netweaver; and &s4h;), &wmp; cannot shield one &sap;
      application from the other.
     </para>
    </listitem>
   </itemizedlist>
  </important>
    <para os="sles">
    To use &wmp;, the &sap; system must use &systemd;.
    Details about the &systemd; integration can be found in <link xlink:href="https://launchpad.support.sap.com/%3Cmark%3E/notes/3139184">SAP
    Notes: 139184 - Linux: systemd integration for sapstartsrv</link> and <link xlink:href="https://launchpad.support.sap.com/%3C/mark%3E/notes/3189534">SAP
    Host Agent and 3189534 - Linux: systemd integration for sapstartsrv and SAP
    HANA</link>.
    </para>
    <important>
  <para os="sles">
    Starting with &sles4sap; 15 SP5, the package <package>sapwmp</package> is
    deprecated. For information about migration.
  </para>
  </important>
 </sect1>
 <sect1 xml:id="sec-memory-protection-setup">
  <title>Setting up &wmp;</title>
    <para>
      &sap; workload memory can be protected against external memory demands using the &wmp; mechanism.
    </para>
  <sect2 xml:id="sec-memory-protection-setup-preparation">
   <title>Configuring &wmp;</title>
   <para>
    The &sap; Start Service puts &sap; instances into the dedicated
    <literal>SAP.slice</literal> cgroup. To use &wmp;, set <varname>MemoryLow=</varname> as follows:
  </para>

<screen>&prompt.sudo;<command>systemctl</command> set-property SAP.slice MemoryLow=...</screen>
     <para>
      This command creates a drop-in in
      <filename>/etc/systemd/system.control/SAP.slice.d/</filename> to set
      <varname>MemoryLow</varname>.
     </para>
     <para>
      <systemitem>SAP.slice</systemitem> is the name of the cgroup that
      contains the SAP processes. <varname>MemoryLow</varname> is the &systemd;
      equivalent of the cgroup parameter
      <varname>memory.low</varname> mentioned in the introduction. The value
      for <varname>MemoryLow</varname> depends on the type of the &sap;
      application and the workload.
     </para>
     <variablelist>
      <varlistentry>
       <term>For &hana;</term>
       <listitem>
        <para>
         Since &hana; has a Global Allocation Limit, its value can be used
         directly.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>&sap; Application Server (&netweaver;, &s4h;)</term>
       <listitem>
        <para>
         For the Application Server, the sizing for the workload should
         indicate the value for <varname>MemoryLow</varname>.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
     <para>
      Keep in mind the following.
     </para>
     <itemizedlist>
      <listitem>
       <para>
        All SAP instances on one host are inside the
        <systemitem>SAP.slice</systemitem>. <varname>MemoryLow</varname> must
        cover the amount of memory of <emphasis>all</emphasis> instances
        together on that host. You cannot protect &sap; systems or their
        instances from each other.
       </para>
      </listitem>
      <listitem>
       <para>
        If you are using a database other than &hana;, some database processes
        can be part of <systemitem>SAP.slice</systemitem>. Their memory
        consumption needs to be taken into account when determining the
        <varname>MemoryLow</varname> value.
       </para>
      </listitem>
      <listitem>
       <para>
        Never choose a value for <varname>MemoryLow</varname> very close to or
        larger than your physical memory. System services and additional
        installed software require memory too. If they are forced to use swap
        too extensively, at the expense of the &sap; application, your system
        can become unresponsive.
       </para>
      </listitem>
     </itemizedlist>
      <para>
          Changes to <varname>MemoryLow</varname> take effect immediately.
      </para>
     <note>
      <title>Correctly calculate <varname>MemoryLow</varname> value</title>
      <para>
       <varname>MemoryLow</varname> takes the memory size in bytes. If the
       value is suffixed with K, M, G, or T, the specified memory size is
       parsed as Kibibytes, Mebibytes, Gibibytes, or Tebibytes (with the base
       1024 instead of 1000, see
       <link xlink:href="https://en.wikipedia.org/wiki/Binary_prefix"/>),
       respectively. Alternatively, a percentage value may be specified, which
       is taken relative to the installed physical memory on the system.
      </para>
        <para>
       The underlying cgroup memory controller rounds up the value to a
       multiple of the page size. To avoid confusion, set the value for
       <varname>MemoryLow</varname> to a multiple of the page size.
      </para>
     </note>
      
  <important>
   <title>Value of <varname>MemoryLow</varname></title>
   <para>
    Never set <varname>MemoryLow</varname> to a value lower than the memory
    already accounted in <systemitem>SAP.slice</systemitem>. To check, run:
   </para>
<screen>&prompt.root;<command>systemctl</command> show -p MemoryCurrent SAP.slice</screen>
  </important>
  </sect2>

  <sect2 xml:id="sec-memory-protection-reboot-and-verification">
   <title>Verification</title>
   <para>
        To verify that the low memory value has been set, run the following command:
   </para>
<screen>systemctl show -p MemoryLow SAP.slice</screen>
<para>
        The command returns the chosen value in bytes.
      </para>
      <para>
    The variable <varname>MemoryLow </varname>can be set to any value, but the content of the variable is always a multiple of the page size. Keep this in mind if you notice a slight difference between the values.
      </para>
    </sect2>
  </sect1>
</chapter>
