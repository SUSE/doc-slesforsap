<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="file:/usr/share/xml/geekodoc/rng/geekodoc5-flat.rnc"
   type="application/relax-ng-compact-syntax"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;

  <!-- Trento specific entities -->
  <!ENTITY trentopremium        "Trento Premium">
  <!ENTITY trentoadmin          "trentoservice">
  <!ENTITY trentoserverip       "192.168.1.2">
  <!ENTITY trentoservername     "<replaceable
    xmlns='http://docbook.org/ns/docbook'>TRENTO_SERVER_HOSTNAME</replaceable>">
  <!ENTITY trentoagentname      "<replaceable xmlns='http://docbook.org/ns/docbook'>TRENTO_AGENT</replaceable>">
  <!ENTITY trentoprompt         "&trentoadmin;@&trentoservername;:~>">
  <!ENTITY trentoagentprompt    "&trentoadmin;@&trentoagentname;:~>">
  <!ENTITY trentoserver.prompt  "<prompt xmlns='http://docbook.org/ns/docbook'>&trentoprompt; </prompt>">
  <!ENTITY trentoagent.prompt   "<prompt xmlns='http://docbook.org/ns/docbook'>&trentoagentprompt; </prompt>">
  <!ENTITY t.server             "Trento Server">
  <!ENTITY t.agent              "Trento Agent">
  <!ENTITY t.web                "Trento web console">
  <!ENTITY k8s                  "Kubernetes">
  <!ENTITY rancher.k8s.engine   "Rancher &k8s; Engine">
]>

<!--

2021-11-18
As agreed on https://confluence.suse.com/x/DAEcN on our Trento doc kick off

-->

<article xml:lang="en" xml:id="article-sap-trento" version="5.1" status="draft"
    xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Getting started with &trentopremium;</title>
  <subtitle>&sles4sapreg;</subtitle>
  <info>
    <abstract>
      <para>
       <remark>toms 2022-04-27: change 1</remark>
       &trentopremium; is an open cloud-native web console that aims to help
       &sap; Basis consultants and administrators to monitor the entire OS stack of their
       &sap; environments, including HA features.
      </para>
    </abstract>
    <xi:include href="common_copyright_gfdl.xml" />
    </info>

  <important>
    <title>Trento is an evolving product</title>
    <para>
      <remark>toms 2022-04-27: change 2</remark>
      The product continues to be under active development but is available for any &suse;
      customer with a registered &productname; 15 (SP1 or higher). Issues should be reported
      through <link xlink:href="https://bugzilla.suse.com"/> under product
      <productname>SUSE Linux Enterprise Server for SAP Applications 15 (SP1 or higher)</productname>
       and component <productname>trento</productname>.
    </para>
  </important>

  <section xml:id="sec-trento-what">
    <title>What is &trentopremium;?</title>
    <para>
      <remark>toms 2022-04-27: change 3</remark>
      &trentopremium; is the extended version of the Trento community project containing
      additional checks. Apart from their naming, both are comprehensive monitoring solutions
      consisting of two main components, the &t.server; and the &t.agent;.
      Both Trento variants provide the following features:
    </para>
    <!--
      from https://confluence.suse.com/x/uoOyN
    -->
    <itemizedlist>
      <listitem>
        <para>A simplified, reactive web UI targeting &sap; admins. </para>
      </listitem>
      <listitem>
        <para>Automated discovery of &sap; Systems, &sap; Instances, and
          &hana; clusters.</para>
      </listitem>
      <listitem>
        <para>Configuration validation for &hana; Scale-Up
          Performance-Optimized scenarios deployed on MS Azure
          cloud, AWS or GCP.
        </para>
      </listitem>
      <listitem>
        <para>
          Monitoring of CPU and Memory usage at host level through basic integration
          with Grafana and Prometheus.
        </para>
      </listitem>
      <listitem>
        <para>
          Email alerting for critical events in the monitored landscape.
        </para>
      </listitem>
    </itemizedlist>

    <para> The <emphasis role="strong">&t.server;</emphasis> is an
      independent, cloud-native, distributed system and designed to run
      on a &k8s; cluster.
      The &t.server; interacts with users via a web front end.
    </para>
    <para> The <emphasis role="strong">&t.agent;</emphasis> is a single
      background process (<systemitem>trento agent</systemitem>) running
      on each host of the SAP infrastructure that is monitored.
    </para>
    <para>
      <remark>toms 2022-04-27: change 4</remark>
      For &trentopremium;, &suse; collects telemetry data relevant for further
      product development. </para>
    <para> See <xref linkend="fig-trento-architecture" /> for additional
      details. </para>
    <!-- toms 2021-11-26: Do we have a vector graphic for this?
      https://github.com/trento-project/trento/blob/main/docs/trento-architecture.svg.
    -->
    <figure xml:id="fig-trento-architecture">
      <title>Architectural overview</title>
      <mediaobject>
        <imageobject>
          <imagedata width="80%"
            fileref="trento-architecture-outline.png" />
          <!-- Source: https://confluence.suse.com/display/SAP/Architecture -->
        </imageobject>
      </mediaobject>
    </figure>
  </section>

  <section xml:id="sec-trento-product-lifecycle-update-strategy">
    <title>Product lifecycle and update strategy</title>
    <!--
      Most ist taken from https://confluence.suse.com/x/uoOyN
    -->
    <para>The main components have different product lifecycles:</para>

    <variablelist>
      <varlistentry>
        <term>&t.agent;</term>
        <listitem>
          <formalpara>
            <title>Delivery mechanism:</title>
            <para>RPM package for &productname; 15&nbsp;SP1 and
              newer.</para>
          </formalpara>
          <formalpara>
            <title>Supported runtime:</title>
            <para> Supports &productname; 15&nbsp;SP1 and newer.
            </para>
          </formalpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>&t.server;</term>
        <listitem>
          <formalpara>
            <title>Delivery mechanism:</title>
            <para> A set of container images from the &suse;
              registry together with a Helm chart for easy
              installation. </para>
          </formalpara>
          <formalpara>
            <title>&k8s;:</title>
            <para> The &t.server; runs on any current Cloud Native
              Computing Foundation (CNCF) certified &k8s;
              distributions. Depending on your background and
              needs, &suse; support several usage scenarios:
            </para>
          </formalpara>
          <itemizedlist>
            <listitem>
              <para> If you already use a CNCF certified &k8s;,
                you can run the &t.server; in it. </para>
            </listitem>
            <listitem>
              <para> If you have no &k8s; and want enterprise
                support, &suse; recommends &suse; Rancher with
                &rancher.k8s.engine; (RKE) either version 1 or
                2. </para>
            </listitem>
            <listitem>
              <para> If you do not have &k8s; and you do not need
                professional support, &suse; recommends using
                K3s which can be installed on a single host.
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
      </varlistentry>
    </variablelist>

    <remark>toms 2021-12-09: what about the update strategy? aj: something
      for next year. :) </remark>
  </section>

<!--
 toms 2021-11-19:
 Do we have specific terms which needs to be explained in a terminology section?
-->

  <section xml:id="sec-trento-requirements">
    <title>Requirements</title>
    <para> This section describes requirements for the &t.server; and its
      &t.agent;s. </para>
    <section xml:id="sec-trento-server-requirements">
      <title>&t.server; requirements</title>
      <para> Running all the &t.server; components requires a minimum of 2GB of RAM, 
       two CPU cores and 64GB of storage. </para>
      <para> While the &t.server; supports various usage scenarios,
        depending on the existing infrastructure, it's designed to be
        cloud-native and OS agnostic. As such, the default installation
        method provisions a minimal, single node, K3S &k8s; cluster for
        running its components in Linux containers. The &t.server; can
        be installed on the following services: </para>
      <!--
        toms 2021-12-06: taken from "Draft - Various Tidbits regarding Productization"
        (https://confluence.suse.com/x/tgCnMg)
      -->
      <itemizedlist>
        <listitem>
          <para>RKE1 (&rancher.k8s.engine; version 1)</para>
        </listitem>
        <listitem>
          <para>RKE2</para>
        </listitem>
        <listitem>
          <para>any other CNCF certified &k8s;</para>
        </listitem>
      </itemizedlist>
    </section>
    <section xml:id="sec-trento-agent-requirements">
      <title>&t.agent; requirements</title>
      <para> The resource footprint of the &t.agent; is designed to not
        impact the performance of the host it runs on. </para>
      <para> The &t.agent; component needs to interact with several
        low-level system components that are part of the &productname;
        distribution. </para>
    </section>
    <section xml:id="sec-trento-network-requirements">
      <title>Network requirements</title>
      <remark>toms 2022-04-27: change 5</remark>
      <itemizedlist>
        <listitem>
          <para> The Trento component running &k8s; has
            network access to the &sap; landscape. </para>
        </listitem>
        <listitem>
          <para>
            <remark>toms 2021-12-06: do we have UDP here too?</remark>
            &t.server; must be reachable via HTTP (port TCP/80) or via HTTPS (port TCP/443) if SSL is enabled, from any &t.agent; host.
          </para>
        </listitem>
        <listitem>
          <para>
            &t.server; must be able to reach the &t.agent;s hosts via SSH (port TCP/22).
          </para>
        </listitem>
        <listitem>
          <para>The &sap; administrator also needs access to &t.server; via HTTP (port TCP/80) or via HTTPS (port TCP/443) if SSL is enabled. </para>
        </listitem>
      </itemizedlist>
    </section>

    <section xml:id="sec-trento-installation-prerequisites">
      <title>Installation pre-requisites</title>
      <itemizedlist>
        <listitem>
          <formalpara>
            <title>&t.server;</title>
            <para>Access to &suse; registry for the deployment of &t.server; premium containers.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>&t.agent;s</title>
            <para>A registered &productname; distribution.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>A Trento service user</title>
            <para> Able to sudo to root without password in the &t.agent; hosts. In this example, we
              will refer to it as <systemitem class="username"
                >&trentoadmin;</systemitem>. You can use any
              desired user name, but we recommend you use it
              consistently across the landscape. </para>
          </formalpara>
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section xml:id="sec-trento-installing-trentoserver">
    <title>Installing &t.server;</title>
<!--    https://confluence.suse.com/display/SAP/Installing+Trento+Premium-->
    <important>
      <title>Expect changes in the installation procedure</title>
      <para>
        The product is under active development. Expect changes in the described
        installation procedure.
      </para>
    </important>

    <para> The procedure uses the following placeholders: </para>
    <remark>toms 2022-04-27: change 6</remark>
    <itemizedlist>
      <listitem>
        <para><replaceable>TRENTO_SERVER_HOSTNAME</replaceable>: the
          host name of the &t.server; host.</para>
      </listitem>
      <listitem>
        <para><replaceable>PRIVATE_SSH_KEY</replaceable>: the absolute path to the private
          SSH key that &t.server; will use to connect to the &t.agent; hosts.
        </para>
      </listitem>
      <listitem>
        <para>
          <replaceable>ADMIN_PASSWORD</replaceable>: the password that the &sap; administrator
          will use to access the web console.
        </para>
      </listitem>
    </itemizedlist>

    <para>
      &t.server; premium is delivered as a Helm chart in order to facilitate its
      installation process. If you already have a &k8s; cluster in place and
      want to use it to run &t.server;, all you have to do is to install Helm
      (<xref linkend="st-install-helm"/>) and then run command in <xref linkend="st-deploy-k3s"/>
      to deploy the Helm chart in your &k8s; cluster.
      If you don't have a &k8s; cluster or have one but don't want to use it for
      Trento, you can deploy a small VM (see section <xref linkend="sec-trento-server-requirements"/>
      for minimum requirements) and follow steps in <xref linkend="pro-trento-manually-installing"/>
      to get &t.server; up and running.
    </para>

    <para>
      If you choose to deploy the VM with a registered SLES for SAP 15 distro,
      instead of executing <xref linkend="st-install-k3s"/> thru
      <xref linkend="st-deploy-k3s"/>, you can install package
      <filename>trento-server-installer</filename> and then execute script
     <filename>install-trento-server</filename>: it will run those steps for you automatically.
    </para>

    <procedure xml:id="pro-trento-manually-installing">
      <title>Manually installing Trento on a &t.server; host</title>
      <step>
        <para> Log on the &t.server; host.
        </para>
      </step>
      <step xml:id="st-install-k3s">
        <para>Install &k8s;, for example, K3s for a single server install:</para>
        <stepalternatives>
          <step>
            <para>Installing as user &rootuser;</para>
            <screen>&prompt.root;curl -sfL https://get.k3s.io | INSTALL_K3S_SKIP_SELINUX_RPM=true sh</screen>
          </step>
          <step>
            <para>Installing as non-&rootuser; user:</para>
            <screen>&prompt.user;curl -sfL https://get.k3s.io | INSTALL_K3S_SKIP_SELINUX_RPM=true sh -s - --write-kubeconfig-mode 644</screen>
          </step>
        </stepalternatives>
      </step>
      <step xml:id="st-install-helm">
        <para>Install Helm as &rootuser;:</para>
        <screen>&prompt.root;curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash</screen>
      </step>
      <step>
        <para>Export the <envar>KUBECONFIG</envar> environment variable for the
          same user that installed K3s:
        </para>
        <screen>export KUBECONFIG=/etc/rancher/k3s/k3s.yaml</screen>
      </step>
      <step xml:id="st-deploy-k3s">
        <para>
          With the same user that installed K3s, install the &t.server; container
          using Helm:
        </para>
        <remark>toms 2022-04-27: change 7</remark>
        <screen>HELM_EXPERIMENTAL_OCI=1 helm upgrade \
   --install trento-server oci://registry.suse.com/trento/trento-server \
   --set trento-web.adminUser.password=<replaceable>ADMIN_PASSWORD</replaceable> \
   --set-file trento-runner.privateKey=<replaceable>PRIVATE_SSH_KEY</replaceable></screen>
       <para>
          Note that the experimental flag is not needed as of Helm version 3.8.0.
        </para>
      </step>
      <step>
        <para> Log out the &t.server; host. </para>
      </step>
      <step>
        <para> To verify that the &t.server; installation was
          successful, open the URL of the &t.web;
          (<uri>http://<replaceable>TRENTO_SERVER_HOSTNAME</replaceable></uri>)
          from a workstation located in the &sap; administrator's LAN. </para>
      </step>
    </procedure>

    <section xml:id="sec-trento-enabling-email-alerts">
      <title>Enabling email alerts</title>
      <remark>toms 2022-04-27: change 8</remark>
      <para>
        Email alerting feature notifies the &sap; administrator about important changes
        in the &sap; Landscape being monitored/observed by Trento.
      </para>
      <para>
        Some of the notified events are:
      </para>
      <itemizedlist>
        <listitem>
          <para>Host heartbeat failed</para>
        </listitem>
        <listitem>
          <para>
            Cluster health detected critical
          </para>
        </listitem>
        <listitem>
          <para>
            Database health detected critical
          </para>
        </listitem>
        <listitem>
          <para>&sap; System health detected critical</para>
        </listitem>
      </itemizedlist>
      <para>
        This feature is disabled by default. It can be enabled at installation time or
        anytime at a later stage.
        In both cases, the procedure is the same and uses the following placeholders:
      </para>
      <variablelist>
        <varlistentry>
          <term><replaceable>SMTP_SERVER</replaceable></term>
          <listitem>
            <para>The SMTP server designated to send alerting emails.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><replaceable>SMTP_PORT</replaceable></term>
          <listitem>
            <para>The port on the SMTP server.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><replaceable>SMTP_USER</replaceable></term>
          <listitem>
            <para>Username to access SMTP server.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><replaceable>SMTP_PASSWORD</replaceable></term>
          <listitem>
            <para>Password to access SMTP server.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><replaceable>ALERTING_RECIPIENT</replaceable></term>
          <listitem>
            <para>Recipient email for alerting notifications.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
        The command to enable email alerting is the following:
      </para>
      <screen>HELM_EXPERIMENTAL_OCI=1 helm upgrade \
   --install trento-server oci://registry.suse.com/trento/trento-server \
   --set trento-web.adminUser.password=<replaceable>ADMIN_PASSWORD</replaceable> \
   --set-file trento-runner.privateKey=<replaceable>PRIVATE_SSH_KEY</replaceable> \
   --set trento-web.alerting.enabled=true \
   --set trento-web.alerting.smtpServer=<replaceable>SMTP_SERVER</replaceable> \
   --set trento-web.alerting.smtpPort=<replaceable>SMTP_PORT</replaceable> \
   --set trento-web.alerting.smtpUser=<replaceable>SMTP_USER</replaceable> \
   --set trento-web.alerting.smtpPassword=<replaceable>SMTP_PASSWORD</replaceable> \
   --set trento-web.alerting.recipient=<replaceable>ALERTING_RECIPIENT</replaceable></screen>
    </section>

    <section xml:id="sec-trento-enabling-ssl">
      <title>Enabling SSL</title>
      <para> Ingress may be used to provide SSL termination for the web
        component of &t.server;. This would allow to encrypt the communication from
        the agent to the server, which is already secured by the corresponding
        API key. It would<remark>toms 2022-04-28: why "would"? alberto because it's up to user to use HTTPS to access the console or not</remark>
        also allow HTTPS access to the web console with trusted certificates.
      </para>
      <para>
        Configuration must be done in the tls section of the <filename>values.yaml</filename>
        file of the chart of the &t.server; web component.
      </para>
      <para> For details on the required Ingress setup and configuration please
        refer to: <link
          xlink:href="https://kubernetes.io/docs/concepts/services-networking/ingress/"
         />. Particularly, refer to section <link
          xlink:href="https://kubernetes.io/docs/concepts/services-networking/ingress/#tls"
         /> for details on the secret format in the YAML configuration file.
      </para>
    </section>
  </section>

  <section xml:id="sec-trento-installing-trentoagent">
    <title>Installing &t.agent;s</title>
    <important>
      <title>Expect changes in the installation procedure</title>
      <para>
        The product is under active development. Expect changes in the described
        installation procedure.
      </para>
    </important>

    <para>
      <remark>toms 2022-04-27: change 9</remark>
      Before you can install a &t.agent; retrieve the API key of your &t.server;.
      Proceed as follows:
    </para>
    <procedure>
      <step>
        <para>
          Open the URL of the Trento web console (<uri>http://<replaceable>TRENTO_SERVER_HOSTNAME</replaceable></uri>).
          It prompts you for a username and password:
        </para>
        <!-- add login of Trento Server -->
        <informalfigure>
          <mediaobject>
            <imageobject>
              <imagedata fileref="trento-web-login.png" width="40%"/>
            </imageobject>
          </mediaobject>
        </informalfigure>
      </step>
      <step>
        <para>Enter the credentials for the <systemitem class="username">admin</systemitem> user
          (established when installing &t.server;).</para>
      </step>
      <step>
        <para>Click <guimenu>Login</guimenu>. As this is the first time you access the console,
          you will be prompted to accept the license agreement. Click <guimenu>Accept</guimenu> to continue.
          Otherwise, you cannot use Trento.</para>
      </step>
      <step>
        <para>Once inside the console, go to Settings:</para>
        <!-- Add API key screen -->
        <informalfigure>
          <mediaobject>
            <imageobject>
              <imagedata fileref="trento-settings-apikey.png" width="80%"/>
            </imageobject>
          </mediaobject>
        </informalfigure>
      </step>
      <step>
        <para>Click the <guimenu>Get your key now!</guimenu> button.</para>
      </step>
      <step>
        <para>Write down the API key.</para>
      </step>
    </procedure>
    <para>
      To install the &t.agent;, repeat the steps in <xref linkend="pro-trento-installing-trentoagent"/>
      on each host to be monitored in your &sap; environment.
    </para>
    <para> The procedure uses the following placeholders: </para>
    <itemizedlist>
      <listitem>
        <para><replaceable>TRENTO_SERVER_IP</replaceable>: local IP
          address of the &t.server; host.</para>
      </listitem>
      <listitem>
        <para><replaceable>TRENTO_AGENT_IP</replaceable>: local IP
          address of the &t.agent; host.</para>
      </listitem>
      <listitem>
        <para><replaceable>TRENTO_AGENT</replaceable>: host name of the
          &t.agent; host.</para>
      </listitem>
    </itemizedlist>
    <para> To install the &t.agent; software on the host and register it
      with the &t.server;, proceed as follows: </para>
    <procedure xml:id="pro-trento-installing-trentoagent">
      <title>Installing &t.agent;s</title>
      <step xml:id="step-trento-installing-trentoagent-sshkey">
        <para>
          On the &t.agent; host, add the public SSH key used for the
          installation of &t.server; to the <filename>~/.ssh/authorized_keys</filename>
          file of the user <systemitem
          class="username">&trentoadmin;</systemitem>.
          This step is necessary to enable the runner checks in the
          &t.agent; host via SSH.
        </para>
      </step>
      <step xml:id="step-trento-installing-trentoagent-knownhosts">
        <para> Add the &t.agent; host to the list of known hosts on your
          &t.server; by logging in once via SSH as <systemitem
            class="username">&trentoadmin;</systemitem>: </para>
        <substeps>
          <step>
            <para> Log in on the &t.server; host.
            </para>
          </step>
          <step>
            <para> Connect to the &t.agent; host as <systemitem
              class="username">&trentoadmin;</systemitem> using SSH and
              answer <literal>yes</literal> when asked whether to
              continue or not with the connection process: </para>
            <screen>&prompt.user;ssh &trentoadmin;@<replaceable>TRENTO_AGENT_IP</replaceable>
[...]
Are you sure you want to continue connecting (yes/no/[fingerprint])? <emphasis role="strong">yes</emphasis>
Warning: Permanently added '<replaceable>TRENTO_AGENT_IP</replaceable>' (ECDSA) to the list of known hosts.</screen>
          </step>
          <step>
            <para>
              Log out to go back to the &t.agent; host.
            </para>
          </step>
        </substeps>
      </step>
      <step>
        <remark>toms 2022-04-27: change 10</remark>
        <para>
          Install the package:
        </para>
        <screen>&prompt.user;sudo zypper ref
&prompt.user;sudo zypper install trento-agent</screen>
      </step>
      <step>
        <para>
          Open the configuration file <filename>/etc/trento/agent.yml</filename>
          uncomment (use <literal>#</literal>) the entries for
          <parameter>ssh-address</parameter>, <parameter>server-url</parameter>, and
          <parameter>api-key</parameter> and update the values appropriately:
        </para>
        <itemizedlist>
          <listitem>
            <para><parameter>ssh-address</parameter>: local IP address</para>
          </listitem>
          <listitem>
            <para><parameter>server-url</parameter>: URL for the &t.server;
              (<uri>http://<replaceable>TRENTO_SERVER_HOSTNAME</replaceable></uri>).
              <remark>toms 2022-04-28: review #2, change 9</remark>
              If SSL termination has been enabled, you can encrypt the communication
              from the agent to the server by providing an HTTPS URL instead of an HTTP one.
              Refer to <xref linkend="sec-trento-enabling-ssl"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              <parameter>api-key</parameter>: the API key retreived from the Web console.
            </para>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>
          Start the &t.agent;:
        </para>
        <screen>&prompt.user;sudo systemctl enable --now trento-agent</screen>
      </step>
      <step>
        <para>Check the status of the &t.agent;:</para>
        <screen>&prompt.user;sudo systemctl status trento-agent
● trento-agent.service - &t.agent; service
     Loaded: loaded (/usr/lib/systemd/system/trento-agent.service; enabled; vendor preset: disabled)
     Active: active (running) since Wed 2021-11-24 17:37:46 UTC; 4s ago
   Main PID: 22055 (trento)
      Tasks: 10
     CGroup: /system.slice/trento-agent.service
             ├─22055 /usr/bin/trento agent start --consul-config-dir=/srv/consul/consul.d
             └─22220 /usr/bin/ruby.ruby2.5 /usr/sbin/SUSEConnect -s

[...]</screen>
      </step>
      <step>
        <para> Repeat this procedure in all &t.agent; hosts. </para>
      </step>
    </procedure>
  </section>

  <section xml:id="sec-trento-webconsole">
    <title>Using &t.web;</title>
    <remark>toms 2021-12-13: this section is a bit too referential and needs
      more focus on the user. As discussed with Alberto, we keep it for
      the time being and change it after the release. </remark>
    <para>
      When you access the Trento web console for the first time, it asks
      to accept the license. Click <guimenu>Accept</guimenu> to continue.
      <remark>toms 2022-01-14: should we include the license page?</remark>
    </para>
    <para>
      After you have accepted the license, Trento can be used.
      The left sidebar in the &t.web; contains the following entries: </para>
    <remark>toms 2022-04-27: change 11</remark>
    <itemizedlist>
      <listitem>
        <formalpara>
          <title><guimenu>Dashboard</guimenu></title>
          <para> Determine at a glance the health status of your &sap;
            environment.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>Hosts</guimenu></title>
          <para>Overview of all registered hosts running the &t.agent;.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>Clusters</guimenu></title>
          <para>Overview of all discovered &pace; clusters.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>&sap; Systems</guimenu></title>
          <para>Overview of all discovered &sap; Systems; identified by the
            corresponding system IDs.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>HANA Databases</guimenu></title>
          <para> Overview of all discovered &hana; databases; identified by
            the corresponding system IDs. </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>Checks catalog</guimenu></title>
          <para> Overview of all catalog of configuration checks that Trento may
            carry out for the different cluster components (&pace;, &corosync;,
            SBD, etc.) in any of the supported platforms: Azure, AWS or GCP. </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>Settings</guimenu></title>
          <para>
            It lets you retrieve the API key for this particular installation.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><guimenu>About</guimenu></title>
          <para> Shows the Trento flavor, the current server version, a link to
            the GitHub repository of the Trento web component, and the number of
            registered &productname; subscriptions. </para>
        </formalpara>
      </listitem>
    </itemizedlist>
    <para> The following subsections provides an overview of Trento's
      functionality. </para>

    <section xml:id="sec-trento-web-home-page">
      <title>Dashboard</title>
      <para> The dashboard allows you to determine at a glance the Health Status of your &sap; environment. </para>
      <remark>toms 2022-04-27: change 12</remark>
      <figure xml:id="fig-trento-web-home">
        <title>Dashboard</title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%" fileref="trento-web-home.png" />
          </imageobject>
        </mediaobject>
      </figure>
      <para>
        The Global Health section on top shows a summary of the Health Status of the registered &sap; systems.
      </para>
      <para> The Health Status of a registered &sap; system is the compound of its Health Status at four
        diferent layers, which are a reflection of the &sap; architecture:</para>
      <itemizedlist>
        <listitem>
          <formalpara>
            <title><guimenu>Hosts</guimenu>:</title>
            <para>it collects the running status of the Trento Agent and the Node Exporter.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title><guimenu>&pace; Clusters</guimenu>:</title>
            <para>the status here is based on the running status of the cluster and the results
              of the configuration checks.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title><guimenu>Database</guimenu>:</title>
            <para>it collects the status of the HANA instances as returned by <command>sapcontrol</command>.</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title><guimenu>SAP instances</guimenu>:</title>
            <para>it summarizes the status of the ABAP instances as returned by <command>sapcontrol</command>.</para>
          </formalpara>
        </listitem>
      </itemizedlist>
      <para>
        <remark>toms 2022-04-27: change 13</remark>
        A grey status is returned when either a component does not exist, or it is stopped
        (as returned by <command>sapcontrol</command>), or its status is unknown (for instance
        if a command to determine the status fails).
      </para>
      <itemizedlist>
        <listitem>
          <para>
            For a system Global Health status to be Passing, all components must be in passing (green) status.
          </para>
        </listitem>
        <listitem>
          <para>
            A system with at least one component in warning (yellow) status, but no components in critical (red) status,
            will be computed as Warning in the Global Health section.
          </para>
        </listitem>
        <listitem>
          <para>
            A system with at least one component in critical (red) status, will be computed as Critical
            in the Global Health section.
          </para>
        </listitem>
      </itemizedlist>
      <para> Grey statuses are not counted in the calculation of the Global Health status.</para>
    </section>

    <section xml:id="sec-trento-web-hosts">
      <title>Hosts view</title>
      <para> To display the lists of registered hosts, click the
        <guimenu>Hosts</guimenu> entry in the left sidebar. </para>
      <remark>toms 2022-04-27: change 14</remark>
      <figure>
        <title>Hosts entry</title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%" fileref="trento-web-hosts.png" />
          </imageobject>
        </mediaobject>
      </figure>
      <para> This view provides the following information: </para>
      <itemizedlist>
        <listitem>
          <para> A <guimenu>Health</guimenu> section on top with a
            summary of the health status of the registered hosts.
          </para>
        </listitem>
        <listitem>
          <remark>toms 2022-04-27: change 15</remark>
          <para>
            A <replaceable role="bold">list</replaceable> of registered host
            with the following info for each
            one of them: Health status (Passing, Warning or Critical),
            host name and local IP address(es).
            When applicable, it shows the cloud provider, the cluster name,
            and the system ID. Otherwise all fields are empty.
            The row ends with the &t.agent;'s version and custom tags that you
            can add and remove manually.
          </para>
        </listitem>
        <listitem>
          <para> Ability to <emphasis role="bold">filter</emphasis> the list by
            health status, host name, &sap; System ID, or custom tags. </para>
        </listitem>
      </itemizedlist>

      <para> Clicking on a host name opens the corresponding <guimenu>Host
        details</guimenu> view, where you can see the following: </para>
      <itemizedlist xml:id="lst-trento-web-hosts-details">
        <title>Host details view</title>
        <listitem>
          <remark>toms 2022-04-27: change 16</remark>
          <para><guimenu>Hosts details</guimenu> section:
            it shows the status of both the &t.agent; and the Node Exporter and
            provides the host name, the cluster name (when applicable) and the
            &t.agent; version.
          </para>
          </listitem>
        <listitem>
          <para>
            <guimenu>Monitoring dashboard</guimenu>:
            it shows the CPU and Memory usage for the specific hosts.
          </para>
          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="trento-web-hosts-dashboard-cpu-memory.png"/>
              </imageobject>
            </mediaobject>
          </informalfigure>
        </listitem>
        <listitem>
          <para><guimenu>Cloud details</guimenu> section: when
            applicable, it provides the name of the virtual machine,
            the name of the resource group it belongs to, the
            location, the size of the virtual machine, and other
            information. </para>
        </listitem>
        <listitem>
          <para><guimenu>&suse; subscription details</guimenu>
            section: it lists the different components or modules
            that are part of the subscription and for each one of
            them it provides the architecture, the version and type,
            the registration and subscription status as well as the
            start and end dates of the subscription. </para>
        </listitem>
        <listitem>
          <remark>toms 2022-04-27: change 18</remark>
          <para><guimenu>&sap; instances</guimenu> section: lists the ID, SID,
            type, features, and instance number of any &sap; instance
            running on the host (&netweaver; or &hana;).</para>
        </listitem>
      </itemizedlist>
    </section>

    <section xml:id="sec-trento-show-pacemaker-clusters">
      <title>Clusters</title>
      <remark>toms 2022-04-27: change 19</remark>
      <para> To display a list of the discovered &pace; clusters, click
        the <guimenu>&pace; Clusters</guimenu> entry on the left
        sidebar. </para>
      <important>
        <remark>toms 2022-04-27: change 20</remark>
        <para> Keep in mind that only &hana; scale-up clusters on Azure,
          AWS, or GCP are currently under consideration. </para>
      </important>
      <remark>toms 2022-04-27: change 21</remark>
      <figure>
        <title>&pace; clusters</title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%"
              fileref="trento-web-pacemaker.png" />
          </imageobject>
        </mediaobject>
      </figure>
      <para> This view provides the following: </para>
      <remark>toms 2022-04-27: change 22</remark>
      <itemizedlist>
        <listitem>
          <para> A <guimenu>Health</guimenu> section on top
            with a summary of the health of the clusters based on the runtime
            status and the selected configuration checks for each one of them. See
            <xref linkend="lst-trento-web-cluster-details" />
            for more information. </para>
        </listitem>
        <listitem>
          <para> A <guimenu>Filters</guimenu> section to filter clusters by
            health status, cluster name, SID, type, or tags. </para>
        </listitem>
        <listitem>
          <para> A list of registered clusters with the following
            information for each one of them: status (based on
            runtime status and configuration checks), cluster name, cluster ID,
            cluster type, SID (when applicable), number of hosts, number of
            resources, and custom tags that can added/removed  manually.
          </para>
        </listitem>
      </itemizedlist>
      <remark>No Settings menu anymore.</remark>
      <para> Clicking on the name of a &hana; scale-up cluster, opens the
        corresponding <guimenu>Cluster details</guimenu> page in which we
        can find the following: </para>
      <itemizedlist xml:id="lst-trento-web-cluster-details">
        <title><guimenu>&pace; Cluster details</guimenu> view</title>
        <listitem>
          <para> A <guimenu>Settings</guimenu> button next to the
            <guimenu>&pace; Cluster details</guimenu> title which
            will open the Cluster settings window:
            <xref
              linkend="fig-trento-web-pagemaker-cluster-settings"
            />. </para>
          <remark>toms 2022-04-28: review #2, change 1</remark>
          <figure xml:id="fig-trento-web-pagemaker-cluster-settings">
            <title><guimenu>Cluster settings</guimenu></title>
            <mediaobject>
              <imageobject>
                <imagedata width="70%"
                  fileref="trento-web-pacemaker-cluster-settings.png"
                />
              </imageobject>
            </mediaobject>
          </figure>
          <para> In this window you have two tabs: </para>
          <itemizedlist xml:id="lst-trento-web-pace-cluster-settings">
            <title><guimenu>Cluster settings</guimenu></title>
            <listitem>
              <remark>toms 2022-04-28: review #2, change 2</remark>
              <para><guimenu>Connection settings</guimenu> tab: 
                set the user that the &t.server; will use to connect
                via SSH to the cluster nodes to perform the HA
                configuration checks.
                In this article, it is <systemitem class="username"
                  >&trentoadmin;</systemitem>.
              </para>
              <itemizedlist>
                <listitem>
                  <para>The default connection user in Azure environments
                    is the Azure admin user used to deploy the VMs.
                  </para>
                </listitem>
                <listitem>
                  <para>The default connection user in AWS and GCP is &rootuser;.</para>
                </listitem>
              </itemizedlist>
              <para>
                If you change the default connection user, you need to click on
                <guimenu>Apply Connection Settings</guimenu> to save the changes.
              </para>
              <informalfigure>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="trento-web-cluster-settings-hana_cluster.png" width="70%"/>
                  </imageobject>
                  
                </mediaobject>
              </informalfigure>
            </listitem>
            <listitem>
              <para>
                <guimenu>Checks selection</guimenu> tab:
                select/deselect a complete category of checks
                (such as &corosync; or &pace; etc.) or individual
                checks. Whenever you make a new selection of checks you need to
                click <guimenu>Select Checks for Execution</guimenu> to save the change.
              </para>
              <!-- still change 2 -->
            </listitem>
          </itemizedlist>
          <para> <remark> alberto: from review #2, change 2 </remark>
            Whenever a change is made and saved in either tab, if any check is
            selected a button will show up allowing the user to start the check
            execution right away.
          </para>
        </listitem>
        <listitem>
          <remark>toms 2022-04-28: review #2, change 3</remark>
          <para>
            Next to the Settings button there are two other buttons:
          </para>
          <itemizedlist>
            <listitem>
              <para>A <guimenu>Show Results</guimenu> button, shows the
                results of the last execution, if any.</para>
            </listitem>
            <listitem>
              <para>
                 A <guimenu>Start Execution</guimenu> button, enabled only
                when checks are selected and the connection settings are appropriate. By clicking this button, the user
                manually triggers the execution of the selected checks.
                In addition to manually triggered executions, Trento execute
                the selected checks every 5&nbsp;minutes.
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>On the top of the details view, a section with the most relevant
            cluster attributes including &hana; system replication mode, &hana;
            system replication operation mode, SAPHanaSR health state and &hana;
            secondary sync state.</para>
          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="70%"
                  fileref="trento-web-pagemaker-cluster-details-header.png"
                />
              </imageobject>
            </mediaobject>
          </informalfigure>
        </listitem>
        <listitem>
          <remark>toms 2022-04-28: review #2, change 5</remark>
          <para>
            When there are stopped resources in the cluster, a
            <guimenu>Stopped resources</guimenu> section listing
            which resources are in that status.
          </para>
        </listitem>
        <listitem>
          <remark>toms 2022-04-28: review #2, change 6</remark>
          <para>A <guimenu>&pace; Site details</guimenu> section
            showing the different sites that are configured for this
            cluster. For each site, its name is displayed along with
            the host name, the role, the local IP(s), and the virtual IP.
            Clicking on the <guimenu>Details</guimenu> button on the right
            opens a <guimenu>Site details</guimenu> window where you can,
            on top, view the main attributes of the node. At the bottom you
            can see the list of resources running on it.
          </para>
          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="70%"
                  fileref="trento-web-pacemaker-cluster-site.png"
                />
              </imageobject>
            </mediaobject>
          </informalfigure>
        </listitem>
        <listitem>
          <para>A <guimenu>SBD/Fencing</guimenu> section listing the
            configured SBD devices and their location, in the case
          of Azure environments.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section xml:id="sec-trento-sap-systems-view">
      <title>&sap; Systems view</title>
      <para> Click the <guimenu>&sap; Systems</guimenu> entry in the left
        sidebar to get an overview of the registered &sap; Systems: </para>
      <remark>toms 2022-04-27: change 23</remark>
      <figure>
        <title>&sap; Systems</title>
        <mediaobject>
          <imageobject>
            <imagedata width="70%"
              fileref="trento-web-sapsystems.png" />
          </imageobject>
        </mediaobject>
      </figure>
      <para> This view provides the following: </para>
      <remark>toms 2022-04-27: change 24</remark>
      <itemizedlist>
        <listitem>
          <para>
            A <guimenu>Health</guimenu> section on top with a summary of the &sap;
            systems statuses based on their runtime status (according to
            <command>sapcontrol</command>).
          </para>
        </listitem>
        <listitem>
          <para>
            A list of registered &sap; Systems with the following information for
            each one of them: health status, system ID (SID), database ID, tenant database,
            database IP address, and custom tags that you can manually set/remove.
            By clicking on the row of one particular system, a section opens up listing
            its &netweaver; instances on top and the database instances underneath,
            with relevant information for each one of them:
          </para>
          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata fileref="trento-web-netweaver.png" width="80%"/>
              </imageobject>
            </mediaobject>
          </informalfigure>
        </listitem>
        <listitem>
          <para>
            Ability to filters &sap; Systems by heath status, SID, and tags.
          </para>
        </listitem>
      </itemizedlist>

      <para> Clicking on a <guimenu>SID</guimenu> entry, opens up the
        <guimenu>SAP Systems</guimenu> details view which displays
        the following: </para>
      <itemizedlist>
        <title>&sap; System details</title>
        <listitem>
          <para>the <guimenu>Name</guimenu> and
            <guimenu>Type</guimenu> of this &sap; System.</para>
        </listitem>
        <listitem>
          <para>
            <guimenu>The NetWeaver; instances layout</guimenu>: for
            each instance, virtual host name, instance number,
            features (processes), HTTP and HTTPS ports, start
            priority, and SAPControl status. </para>
        </listitem>
        <listitem>
          <remark>toms 2022-04-27: change 25</remark>
          <para>
            <guimenu>The list of hosts where the different NetWeaver
              instances are running</guimenu>, with the host name,
            the IP address, the cloud provider (when applicable),
            the cluster name (when applicable), and the &t.agent; version
            for each listed host. When you click the host name, it takes
            you to the corresponding <xref linkend="lst-trento-web-hosts-details" />.
          </para>
        </listitem>
      </itemizedlist>
      <figure>
        <title>&sap; System Details</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="trento-web-sap-systems-view.png" width="80%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section xml:id="sec-trento-hana-db-view">
      <title>&hana; databases view</title>
      <para> To get an overview of registered &hana; databases, click the
        <guimenu>HANA databases</guimenu> entry in the left sidebar. </para>
      <remark>toms 2022-04-27: change 26</remark>
      <figure>
        <title>HANA databases</title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%" fileref="trento-web-hanadb.png"
            />
          </imageobject>
        </mediaobject>
      </figure>
      <para>This view provides the following:</para>
      <remark>toms 2022-04-27: change 27</remark>
      <itemizedlist>
        <listitem>
          <para>A <guimenu>Health</guimenu> section on top with a summary
          of the status of the &hana; databases based on their runtime status
          (according to <command>sapcontrol</command>).
          </para>
        </listitem>
        <listitem>
          <para> A list of registered &hana; databases with the
            following information for each one of them: health status, system ID
            (SID), a summary of the database instances and their status and custom
            tags that you can manuall set/remove.
            By clicking on the row of one particular database, a list of all related
            instances is displayed and for each one of them you can see the corresponding
            health status, its instance number, the feature (role) it provides, the system
            replication role and status (when applicable), the cluster name (when applicable)
            and the host where it is running.
          </para>
        </listitem>
        <listitem>
          <para> Ability to filters &hana; databases by health status, SID, and custom tags.
          </para>
        </listitem>
      </itemizedlist>
      <para> Clicking on one of the <guimenu>SID</guimenu>s opens the
        <guimenu>HANA Databases</guimenu> detail view which shows
        the following: </para>
      <remark>toms 2022-04-27: change 28</remark>
      <itemizedlist>
        <title><guimenu>HANA Database</guimenu> details view</title>
        <listitem>
          <para>
            <guimenu>Layout</guimenu> section: lists all related
            &hana; instances with their corresponding virtual hostname, instance number,
            features (roles), HTTP/HTTPS ports, start priorities, and SAPControl status.
          </para>
        </listitem>
        <listitem>
          <para>
            <guimenu>Hosts</guimenu> section: lists the hosts where all the related
            instances are running and for each host it provides the host name, the
            local IP address(es), the cloud provider (when applicable), the cluster
            name (when applicable), the system ID, and the &t.agent; version.
            </para>
          <para> Clicking on a host name takes you to the
            corresponding <xref linkend="lst-trento-web-hosts-details" />.
          </para>
        </listitem>
      </itemizedlist>
      <remark>toms 2022-04-27: change 28</remark>
      <figure>
        <title>HANA Database details</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="trento-web-hana-database.png" width="70%"/>
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section xml:id="sec-trento-configuration-checks">
      <title>HA configuration checks</title>
      <remark>toms 2022-04-27: change 29</remark>
      <para> To get an overview of the configuration checks that Trento
        can manage click the <guimenu>Checks catalog</guimenu>
        entry in the left sidebar.
      </para>
      <remark>toms 2022-04-27: change 30</remark>
      <figure>
        <title><guimenu>Checks catalog</guimenu></title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%"
              fileref="trento-web-settings-catalogs.png" />
          </imageobject>
        </mediaobject>
      </figure>
      <para>
        <remark>toms 2022-04-27: change 31</remark>
        The view allows you to select the platform which values you
        want to review: Azure, AWS, or GCP. For each platform, it shows
        the configuration checks that Trento can perform for the different
        cluster components: &corosync;, &pace;, SBD, Azure Fence Agent,
        &hana; System Replication Resource Agent, OS and package version,
        and miscellaneous.
      </para>
      <para> Checks are grouped by components. Each test is identified by
        a test ID, next to which we can see the check description and an
        info icon. By clicking on the info icon we get detail
        information about the corresponding check: abstract, remediation
        actions (what to do when the check is negative) and related
        references. </para>
      <para> What checks are carried out for each particular cluster is
        determined using the <guimenu>Settings</guimenu> button in the
        corresponding cluster detail view. See <xref
          linkend="lst-trento-web-pace-cluster-settings" /> for
        details. </para>
    </section>
  </section>

  <section xml:id="sec-trento-updating-trentoserver">
    <title>Updating &t.server;</title>
    <para> To update the &t.server;, do the following: </para>
    <procedure>
      <step>
        <para> Ensure the &t.server; is running. </para>
      </step>
      <step>
        <remark>toms 2022-04-27: change 32</remark>
        <para>
          Ensure that credentials for &kube; are set up correctly.
          For example, if you installed K3s, export the <envar>KUBECONFIG</envar>
          environment variable for the same user that performed the
          installation:
        </para>
        <screen>export KUBECONFIG=/etc/rancher/k3s/k3s.yaml</screen>
      </step>
      <step>
        <para>
          With the same user, start the update of the &t.server;. It is exactly
          the same command as for the installation:
        </para>
        <screen>HELM_EXPERIMENTAL_OCI=1 helm upgrade \
   --install trento-server oci://registry.suse.com/trento/trento-server \
   --set trento-web.adminUser.password=<replaceable>ADMIN_PASSWORD</replaceable> \
   --set-file trento-runner.privateKey=<replaceable>PRIVATE_SSH_KEY</replaceable>
        </screen>
        <para>
          Note that the experimental flag is not needed as of Helm version 3.8.0.
        </para>
        <para>
          If email alerting is enabled in the environment, then the update command
          should include the corresponding options:
        </para>
        <screen>HELM_EXPERIMENTAL_OCI=1 helm upgrade \
   --install trento-server oci://registry.suse.com/trento/trento-server \
   --set trento-web.adminUser.password=<replaceable>ADMIN_PASSWORD</replaceable> \
   --set-file trento-runner.privateKey=<replaceable>PRIVATE_SSH_KEY</replaceable> \
   --set trento-web.alerting.enabled=true \
   --set trento-web.alerting.smtpServer=<replaceable>SMTP_SERVER</replaceable> \
   --set trento-web.alerting.smtpPort=<replaceable>SMTP_PORT</replaceable> \
   --set trento-web.alerting.smtpUser=<replaceable>SMTP_USER</replaceable> \
   --set trento-web.alerting.smtpPassword=<replaceable>SMTP_PASSWORD</replaceable> \
   --set trento-web.alerting.recipient=<replaceable>ALERTING_RECIPIENT</replaceable></screen>
      </step>
      <step>
        <para>Check the &t.server; processes:</para>
        <screen>kubectl get pod</screen>
      </step>
      <step>
        <para> Open the &t.web; URL
          <uri>http://<replaceable>TRENTO_SERVER_HOSTNAME</replaceable></uri>.
        </para>
      </step>
      <step>
        <para> To check the new version, hover the mouse pointer over
          the info button in the lower-left corner. </para>
      </step>
    </procedure>
  </section>

  <section xml:id="sec-trento-updating-trentoagent">
    <title>Updating a &t.agent;</title>
    <para>
      To update the &t.agent;, do the following:
    </para>
    <procedure>
      <step>
        <para>Log in the &t.agent; host.</para>
      </step>
      <step>
        <para>Stop the &t.agent;:</para>
        <screen>&prompt.user;sudo systemctl stop trento-agent</screen>
      </step>
      <step>
        <para>
          Install the package:
        </para>
        <screen>&prompt.user;sudo zypper ref
&prompt.user;sudo zypper install trento-premium</screen>
      </step>
      <step>
        <remark>toms 2022-04-27: change 34</remark>
        <para>
          Ensure that entries <parameter>ssh-address</parameter>,
          <parameter>server-url</parameter>, and <parameter>api-key</parameter>
          are maintained properly in the &t.agent; configuration file
          <filename>/etc/trento/agent.yaml</filename>:
        </para>
        <itemizedlist>
          <listitem>
            <para><parameter>ssh-address</parameter>: local IP address</para>
          </listitem>
          <listitem>
            <para><parameter>server-url</parameter>: HTTP URL for the &t.server;
              (<uri>http://<replaceable>TRENTO_SERVER_HOSTNAME</replaceable></uri>).
            </para>
          </listitem>
          <listitem>
            <para>
              <parameter>api-key</parameter>: the API key retreived from the Web console.
            </para>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>
          Restart the &t.agent;:
        </para>
        <screen>&prompt.user;sudo systemctl restart trento-agent</screen>
      </step>
      <step>
        <para>Check the status of the &t.agent;:</para>
        <screen>&prompt.user;sudo systemctl status trento-agent
● trento-agent.service - &t.agent; service
     Loaded: loaded (/usr/lib/systemd/system/trento-agent.service; enabled; vendor preset: disabled)
     Active: active (running) since Wed 2021-11-24 17:37:46 UTC; 4s ago
   Main PID: 22055 (trento)
      Tasks: 10
     CGroup: /system.slice/trento-agent.service
             ├─22055 /usr/bin/trento agent start --consul-config-dir=/srv/consul/consul.d
             └─22220 /usr/bin/ruby.ruby2.5 /usr/sbin/SUSEConnect -s

[...]</screen>
      </step>
      <step>
        <para>Check the version on the &t.web; (URL
              <uri>http://<replaceable>TRENTO_SERVER_HOSTNAME</replaceable></uri>).</para>
      </step>
      <step>
        <para> Repeat this procedure in all &t.agent; hosts. </para>
      </step>
    </procedure>

  </section>

   <section xml:id="sec-trento-uninstall-trentoserver">
    <title>Uninstalling &t.server;</title>
    <para> To uninstall &t.server;, proceed as follows:</para>
     <remark>toms 2022-04-27: change 35</remark>
    <procedure>
      <step>
        <para>
          Ensure that credentials for &kube; are set up correctly.
          For example, if you installed K3s, set the <envar>KUBECONFIG</envar>
          environment variable for the user that performed the installation:
        </para>
        <screen>export KUBECONFIG=/etc/rancher/k3s/k3s.yaml</screen>
      </step>
      <step>
        <para>
          With the same user, run the following command:
        </para>
        <screen>helm uninstall trento-server</screen>
      </step>
    </procedure>
  </section>

  <section xml:id="sec-trento-uninstall-trentoagent">
    <title>Uninstalling a &t.agent;</title>
    <para>
      To uninstall a &t.agent;, perform the following steps:
    </para>
    <remark>toms 2022-04-27: change 36</remark>
    <procedure>
      <step>
        <para>Log in the &t.agent; host.</para>
      </step>
      <step>
        <para>Stop the &t.agent;:</para>
        <screen>&prompt.user;sudo systemctl stop trento-agent</screen>
      </step>
      <step>
        <para>
          Remove the package:
        </para>
        <screen>&prompt.user;sudo zypper remove trento-agent</screen>
      </step>
    </procedure>
  </section>

  <!-- 2022-04-29: According to Alberto, this feature is not available in the GA version. -->
<!--
  <section xml:id="sec-trento-feedback">
    <title>Giving feedback</title>
    <para>
      On the right side of &t.server; console you will find the button <guimenu>Report feedback</guimenu>.
      You can use it to provide feedback, rate the application, share what you liked and what can be improved.
      For enterprise support requests, use the <link xlink:href="&sccurl;">&scc;</link>.
    </para>
  </section>
-->

  <section xml:id="sec-trento-more-information">
    <title>More information</title>
    <itemizedlist>
      <listitem>
        <para>Homepage: <link xlink:href="https://www.trento-project.io/"/></para>
      </listitem>
      <listitem>
        <para>Trento project: <link xlink:href="https://github.com/trento-project/trento"/></para>
      </listitem>
    </itemizedlist>
  </section>
  <!--<xi:include href="common_legal.xml"/>-->
</article>
