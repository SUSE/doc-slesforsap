<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-s4s-tune">
 <title>Tuning</title>

 <para>
  This chapter presents information about tuning &productname; to work optimally with
  &sap; applications.
 </para>
 <para>
   On &s4s; you have the choice between <command>sapconf</command> and
   <command>saptune</command>. However, <command>saptune</command> is
   the more elaborate tool that offers more features.
  </para>

 <note>
   <title>The <command>sapconf</command> Command Has Been Removed</title>
   <para>
    In &sls; and &productname; 11 and 12, the <command>sapconf</command> command
    was included in the package with the same name.
  </para>
  <para>
    For &sls; and &productname; 15 this has been changed:
    the command <command>sapconf</command> have been removed from the
    <package>sapconf</package> package. The package contains a &systemd; service
    only. There is no &sapconf; command line tool anymore, no &sapconf;/&tuned; profiles,
    and no &tuned;.
   </para>
  </note>

 <sect1 xml:id="sec-sapconf-4">
  <title>Tuning Systems with &sapconf; 4</title>
  <para>
   The package <systemitem>sapconf</systemitem> is available in &sls; and &s4s;.
   This package contains the
   <systemitem>tuned</systemitem> profile <literal>sapconf</literal>.
   This single tuning profile sets recommended parameters for the following
   types of &sap; applications: &netweaver;, &hana; and &hana;-based applications.
  </para>

  <variablelist xml:id="vl-tune-sapconf4-overview">
   <title>Overview of &sapconf;4 in &slsreg;&nbsp;12</title>
   <varlistentry>
    <term>&sapconf;4 (&tuned; based)</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para><systemitem>sap-netweaver</systemitem> (&tuned; profile)</para>
      </listitem>
      <listitem>
       <para><systemitem>sap-hana</systemitem> (&tuned; profile)</para>
      </listitem>
      <listitem>
       <para><systemitem>sap-bobj</systemitem> (&tuned; profile)</para>
      </listitem>
      <listitem>
       <para><systemitem>sap-ase</systemitem> (&tuned; profile)</para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Overview of &sapconf;4 in &slsreg;&nbsp;15</title>
   <varlistentry>
    <term>&sapconf;4 (&tuned; based)</term>
    <listitem>
     <para>&sapconf; (&tuned; profile)</para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   Note that if you previously made changes to the system tuning, those
   changes may be overwritten by the &sapconf; profile.
  </para>
  <para>
   &sapconf; consists of two primary parts:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     A &systemd; service that ensures &tuned; and related services are
     running and the <literal>sapconf</literal> profile is applied.
    </para>
   </listitem>
   <listitem>
    <para>
     The &tuned; profile <literal>sapconf</literal> that applies
     configured &sapconf; tuning parameters using a script and configuration
     files.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   To use &sapconf;, make sure
   that the packages <package>tuned</package> and
   <package>sapconf</package> are installed on your system.
  </para>

  <note>
   <title>Unified Profiles in &sls; and &productname;Â &productnumber;</title>
   <para>
    In &sls; and &productname; 15 and above, only a single &tuned; profile,
    <literal>sapconf</literal>, is shipped. It is equivalent to the profiles
    <literal>sap-hana</literal>/<literal>sap-netweaver</literal> shipped in
    earlier versions of &productname;.
   </para>
  </note>
  <sect2 xml:id="sec-sapconf-4-enable">
   <title>Enabling and Disabling &sapconf; and Viewing Its Status</title>
   <para>
    After the installation of &sapconf;, &tuned; is enabled and the
    <literal>sapconf</literal> profile is activated. However, if
    another &tuned; profile is already enabled, &sapconf; will not enable its
    own &tuned; profile.
   </para>
   <para>
    To make sure &sapconf; applies all tuning parameters,
    reboot the machine after installation.
   </para>
   <para>
    You can inspect or change the status of &sapconf; as described in the
    following:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      To see the status of the service
      <systemitem class="daemon">sapconf</systemitem>:
     </para>
     <screen>&prompt.root;<command>systemctl status sapconf</command></screen>
     <para>
      The service should be displayed as <emphasis>active (exited)</emphasis>,
      as it is only responsible for starting &tuned; and will exit afterward.
     </para>
    </listitem>
    <listitem>
     <para>
      To start the service
      <systemitem class="daemon">sapconf</systemitem> and with it the service
      &tuned;:
     </para>
     <screen>&prompt.root;<command>systemctl start sapconf</command></screen>
    </listitem>
    <listitem>
     <para>
      Should <systemitem class="daemon">sapconf</systemitem> be disabled,
      enable and start it with:
     </para>
     <screen>&prompt.root;<command>systemctl enable --now sapconf</command></screen>
    </listitem>
    <listitem>
     <para>
      To stop the service
      <systemitem class="daemon">sapconf</systemitem> and with it the service
      &tuned;:
     </para>
     <screen>&prompt.root;<command>systemctl stop sapconf</command></screen>
     <para>
      This will terminate &tuned; as well, therefore the vast majority of
      optimizations will be disabled immediately. The only exceptions from that
      are options that require a system reboot to enable/disable.
     </para>
    </listitem>
    <listitem>
     <para>
      To disable <systemitem class="daemon">sapconf</systemitem>, use:
     </para>
     <screen>&prompt.root;<command>systemctl disable sapconf</command></screen>
     <para>
      If you have not specifically enabled any of the services that &sapconf;
      depends on yourself, this will also disable most tuning parameters and
      all services used by &sapconf;.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Similarly, you can inspect and change the status of the underlying service
    &tuned;:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      To see the status of the service &tuned;:
     </para>
     <screen>&prompt.root;<command>systemctl status tuned</command></screen>
    </listitem>
    <listitem>
     <para>
      To see which &tuned; profile is currently in use:
     </para>
     <screen>&prompt.root;<command>tuned-adm active</command></screen>
     <para>
      If this command does not return the name of the currently active profile
      as <literal>sapconf</literal>, enable that profile:
     </para>
     <screen>&prompt.root;<command>tuned-adm profile sapconf</command></screen>
    </listitem>
   </itemizedlist>
   <tip>
    <title>Additional Services that &sapconf; Relies On</title>
    <para>
     In addition to the &sapconf; service itself and the &tuned; service,
     &sapconf; also relies on the following two services:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <systemitem class="daemon">sysstat</systemitem> which collects data on
       system activity.
      </para>
     </listitem>
     <listitem>
      <para>
       <systemitem class="daemon">uuidd</systemitem> which generates time-based
       UUIDs that are guaranteed to be unique even in settings where many
       processor cores are involved. This is necessary for &sap; applications.
      </para>
     </listitem>
    </itemizedlist>
   </tip>
  </sect2>
  <sect2 xml:id="sec-sapconf-4-configure">
   <title>Configuring &sapconf;4</title>
   <para>
    In general, the default configuration of &sapconf; already uses the
    parameter values recommended by &sap;. However, if you have special
    needs, you can configure the tool to better suit those.
   </para>
   <para>
    The configuration of &sapconf; is split into two parts that can be configured
    in different ways:
   </para>
   <variablelist>
    <varlistentry>
     <term><filename>/usr/lib/tuned/<replaceable>PROFILE</replaceable>/tuned.conf</filename></term>
     <listitem>
      <para>
       Any file that adheres to this pattern
       can be edited like in <xref linkend="pro-sapconf-4-configure"/>.
       To configure parameters from this file, copy it to the custom profile
       directory of &tuned; under <filename>/etc/tuned</filename> first and
       then change values in it. If you change the file in place instead, you
       will lose the changes you make on the next update of the
       <package>sapconf</package> package.
      </para>
      <para>
       The following procedure shows an example how to adapt the file
        <filename>/usr/lib/tuned/sapconf/tuned.conf</filename>.
       However, as written before, this is possible with any profile.
       Configure the file as described in the following procedure:
      </para>
      <procedure xml:id="pro-sapconf-4-configure">
       <title>Configuring &sapconf;4 Profiles</title>
       <step>
        <para>
         Create a new custom &tuned; profile directory and copy the file
         <filename>tuned.conf</filename>:
        </para>
<screen>&prompt.root;mkdir /etc/tuned/sapconf
&prompt.root;cp /usr/lib/tuned/sapconf/tuned.conf /etc/tuned/sapconf/</screen>
       </step>
       <step>
        <para>
         Within the newly copied <filename>tuned.conf</filename>, fix the
         reference to <filename>script.sh</filename> to use an absolute path
         that points to the script from the original profile:
        </para>
        <screen>script = /usr/lib/tuned/sapconf/script.sh</screen>
        <para>
         Do not instead copy <filename>script.sh</filename>, as that
         provokes update compatibility issues for &sapconf;.
        </para>
       </step>
       <step>
        <para>
         Edit the parameters in
         <filename>/etc/tuned/sapconf/tuned.conf</filename>.
        </para>
       </step>
      </procedure>
      <para>
       After each update to &sapconf;, make sure to compare the contents of
       the original and the custom <filename>tuned.conf</filename>.
      </para>
      <para>
       Log messages related to this file are written to
       <filename>/var/log/tuned/tuned.log</filename>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>/etc/sysconfig/sapconf</filename></term>
     <listitem>
      <para>
       This file contains most parameters of &sapconf;. The parameters from
       this file are applied using the aforementioned script
       <filename>/usr/lib/tuned/sapconf/script.sh</filename>.
      </para>
      <para>
       This file can be edited directly. All parameters in this file are
       explained by means of comments and references to &sap; Notes which can
       be viewed at <link xlink:href="https://launchpad.support.sap.com/"/>.
      </para>
      <para>
       When &sapconf; is updated, all customized parameters from this file will
       be preserved as much as possible. However, sometimes parameters cannot
       be transferred cleanly to the new configuration file. Therefore, after
       updating it is advisable to check the difference between the previous
       custom configuration which during the update is moved to
       <filename>/etc/sysconfig/sapconf.rpmsave</filename>
       and the new version at <filename>/etc/sysconfig/sapconf</filename>.
      </para>
      <para>
       Log messages related to this file are written to
       <filename>/var/log/sapconf.log</filename>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    When editing either of these files, you will find that some values are
    commented by means of a <literal>#</literal> character at the beginning of
    the line. This means that while the parameter is relevant for tuning, there
    is no suitable default for it.
   </para>
   <para>
    Conversely, you can add <literal>#</literal> characters to the beginning of
    the line to comment specific parameters. However, you should avoid this
    practice, as it can lead to &sapconf; not properly applying the profile.
   </para>
   <para>
    To apply edited configuration, restart &sapconf;:
   </para>
   <screen>&prompt.root;<command>systemctl restart sapconf</command></screen>
   <para>
    Confirming that a certain parameter value was applied correctly works
    differently for different parameters. Hence, the following serves as an
    example only:
   </para>
   <example xml:id="ex-sapconf-change-parameter">
    <title>Checking Parameters</title>
    <para>
     To confirm that the setting for <literal>TCP_SLOW_START</literal> was
     applied, do the following:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       View the log file of &sapconf; to see whether it applied the value.
       Within <filename>/var/log/sapconf.log</filename>, check for a line
       containing this text:
      </para>
      <screen>Change net.ipv4.tcp_slow_start_after_idle from 1 to 0</screen>
      <para>
       Alternatively, the parameter may have already been set correctly
       before &sapconf; was started. In this case, &sapconf; will not change
       its value:
      </para>
      <screen>Leaving net.ipv4.tcp_slow_start_after_idle unchanged at 1</screen>
     </listitem>
     <listitem>
      <para>
       The underlying option behind <literal>TCP_SLOW_START</literal> can be
       manually configured at
       <filename>/proc/sys/net.ipv4.tcp_slow_start_after_idle</filename>.
       To check its actual current value, use:
      </para>
      <screen>&prompt.root;<command>sysctl net.ipv4.tcp_slow_start_after_idle</command></screen>
     </listitem>
    </itemizedlist>
   </example>
  </sect2>
  <sect2 xml:id="sec-sapconf-4-remove">
   <title>Removing &sapconf;</title>
   <para>
    To remove &sapconf; from a system, uninstall its package with:
   </para>
   <screen>&prompt.root;<command>zypper rm sapconf</command></screen>
   <para>
    Note that when doing this, dependencies of &sapconf; will remain installed.
    However, the services <systemitem class="daemon">sysstat</systemitem> and
    <systemitem class="daemon">tuned</systemitem> will
    go into a disabled state. If either is still relevant to you, make sure to
    enable it again.
   </para>
   <para>
    Certain parameters and files are not removed when &sapconf; is uninstalled.
    For more information, see the man page <command>man 7
    sapconf</command>, section <citetitle>PACKAGE REQUIREMENTS</citetitle>.
   </para>
  </sect2>
  <sect2 xml:id="sec-sapconf-4-more">
   <title>For More Information</title>
   <para>
    The following man pages provide additional information about &sapconf;:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      High-level overview of tuning parameters used by &sapconf;:
      <command>man 7 tuned-profiles-sapconf</command>
     </para>
    </listitem>
    <listitem>
     <para>
      Detailed description of all tuning parameters set by &sapconf;:
      <command>man 5 sapconf</command>
     </para>
    </listitem>
    <listitem>
     <para>
      Information about configuring and customizing the &sapconf; profile:
      <command>man 7 sapconf</command>
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Also see the blog series detailing the updated version of &sapconf; at
    <link xlink:href="https://www.suse.com/c/a-new-sapconf-is-available/"/>.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-sapconf-5">
  <title>Tuning Systems with &sapconf; 5</title>
  <para>
   The package <systemitem>sapconf</systemitem> is available in &sls; and &s4s;.
   It sets recommended parameters for the following types of &sap; applications:
   &netweaver;, &hana; and &hana;-based applications.
  </para>

  <variablelist>
   <title>Overview of &sapconf;5 in &slsreg;&nbsp;12</title>
   <varlistentry>
    <term>&sapconf;5 (without &tuned;)</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para><systemitem>sapconf-netweaver</systemitem> (&sapconf; profile as a replacement for &tuned; profile)</para>
      </listitem>
      <listitem>
       <para><systemitem>sapconf-hana</systemitem> (&sapconf; profile as a replacement for &tuned; profile)</para>
      </listitem>
      <listitem>
       <para><systemitem>sapconf-bobj</systemitem> (&sapconf; profile as a replacement for &tuned; profile)</para>
      </listitem>
      <listitem>
       <para><systemitem>sapconf-ase</systemitem> (&sapconf; profile as a replacement for &tuned; profile)</para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Overview of &sapconf;5 in &slsreg;&nbsp;15</title>
   <varlistentry>
    <term>&sapconf;5 (without &tuned;)</term>
    <listitem>
     <para>no profiles anymore</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   Note that if you previously made changes to the system tuning, those
   changes may be overwritten by &sapconf;.
  </para>
  <para>
   &sapconf;&nbsp;5 ships a &systemd; service which applies the tuning and ensures that
   related services are running.
  </para>
  <para>
   To use &sapconf;, make sure
   that the package <package>sapconf</package> is installed on your system.
  </para>

  <note>
   <title>No Profiles in &sls; and &productname;Â &productnumber;</title>
   <para>
    In &sls; and &productname; 15, &sapconf; no longer supports profiles.
   </para>
  </note>

  <sect2 xml:id="sec-sapconf-5-verify">
   <title>Verifying &sapconf; setup</title>
   <para>
    With &sapconf; 5.0.2 onwards the check tool <command>sapconf_check</command> is available,
    which verifies the correct setup of &sapconf;. For example:
   </para>
   <screen>&prompt.root;<command>sapconf_check</command>
This is sapconf_check v1.0.
It verifies if sapconf is set up correctly and will give advice to do so.
Please keep in mind:
- This tool does not check, if the tuning itself works correctly.
- Follow the hints from top to down to minimize side effects.
Checking sapconf
================
[ OK ] sapconf package has version 5.0.2
[ OK ] saptune.service is inactive
[ OK ] saptune.service is disabled
[WARN] tuned.service is enabled/active with profile 'virtual-guest -> Sapconf does not require tuned! Run 'systemctl stop tuned.service', if not needed otherwise.
[FAIL] sapconf.service is inactive -> Run 'systemctl start sapconf.service' to activate the tuning now.
[FAIL] sapconf.service is disabled -> Run 'systemctl enable sapconf.service' to activate sapconf at boot.1 warning(s) have been found.
2 error(s) have been found.
Sapconf will not work properly!</screen>
   <para>
    If <command>sapconf_check</command> finds problems, it will give hints how to resolve the issue.
    The tool will not verify if the system has been tuned correctly. It only checks that &sapconf;
    is setup correctly and has been started.
   </para>
  </sect2>
  <sect2 xml:id="sec-sapconf-5-enable">
   <title>Enabling and Disabling &sapconf; and Viewing Its Status</title>
   <para>
    After the installation of &sapconf;, the &sapconf; service is enabled.
   </para>
   <para>
    You can inspect or change the status of &sapconf; as described in the
    following:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      To see the status of the service
      <systemitem class="daemon">sapconf</systemitem>:
     </para>
     <screen>&prompt.root;<command>systemctl status sapconf</command></screen>
     <para>
      The service should be displayed as <emphasis>active (exited)</emphasis>.
     </para>
    </listitem>
    <listitem>
     <para>
      To start the service
      <systemitem class="daemon">sapconf</systemitem>:
     </para>
     <screen>&prompt.root;<command>systemctl start sapconf</command></screen>
    </listitem>
    <listitem>
     <para>
      Should <systemitem class="daemon">sapconf</systemitem> be disabled,
      enable and start it with:
     </para>
     <screen>&prompt.root;<command>systemctl enable --now sapconf</command></screen>
    </listitem>
    <listitem>
     <para>
      To stop the service
      <systemitem class="daemon">sapconf</systemitem>:
     </para>
     <screen>&prompt.root;<command>systemctl stop sapconf</command></screen>
     <para>
      This command will disable the vast majority of optimizations immediately. The only 
      exceptions from this rule are options that require a system reboot to enable/disable.
     </para>
    </listitem>
    <listitem>
     <para>
      To disable <systemitem class="daemon">sapconf</systemitem>, use:
     </para>
     <screen>&prompt.root;<command>systemctl disable sapconf</command></screen>
     <para>
      If you have not specifically enabled any of the services that &sapconf;
      depends on yourself, this will also disable most tuning parameters and
      all services used by &sapconf;.
     </para>
    </listitem>
   </itemizedlist>

   <tip>
    <title>Additional Services that &sapconf; Relies On</title>
    <para>
     In addition to the &sapconf; service it also relies on the following two services:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <systemitem class="daemon">sysstat</systemitem> which collects data on
       system activity.
      </para>
     </listitem>
     <listitem>
      <para>
       <systemitem class="daemon">uuidd</systemitem> which generates time-based
       UUIDs that are guaranteed to be unique even in settings where many
       processor cores are involved. This is necessary for &sap; applications.
      </para>
     </listitem>
    </itemizedlist>
   </tip>
  </sect2>
  <sect2 xml:id="sec-sapconf-5-configure">
   <title>Configuring &sapconf;5</title>
   <para>
    In general, the default configuration of &sapconf; already uses the
    parameter values recommended by &sap;. However, if you have special
    needs, you can configure the tool to better suit those.
   </para>
   <para>
    All parameters of &sapconf; can be found in the file
    <filename>/etc/sysconfig/sapconf</filename>.
    The file can be edited directly. All parameters in this file are
    explained by means of comments and references to &sap; Notes which can
    be viewed at <link xlink:href="https://launchpad.support.sap.com/"/>.
   </para>
   <para>
    When &sapconf; is updated, all customized parameters from this file will
    be preserved as much as possible. However, sometimes parameters cannot
    be transferred cleanly to the new configuration file. Therefore, after
    updating it is advisable to check the difference between the previous
    custom configuration which during the update is moved to
    <filename>/etc/sysconfig/sapconf.rpmsave</filename>
    and the new version at <filename>/etc/sysconfig/sapconf</filename>.
   </para>
   <para>
    Log messages related to this file are written to
    <filename>/var/log/sapconf.log</filename>.
   </para>
   <para>
    When editing either of these files, you will find that some values are
    commented by means of a <literal>#</literal> character at the beginning of
    the line. This means that while the parameter is relevant for tuning, there
    is no suitable default for it.
   </para>
   <para>
    Conversely, you can add <literal>#</literal> characters to the beginning of
    the line to comment specific parameters. However, you should avoid this
    practice, as it can lead to &sapconf; not properly applying the profile.
   </para>
   <para>
    To apply edited configuration, restart &sapconf;:
   </para>
   <screen>&prompt.root;<command>systemctl restart sapconf</command></screen>
   <para>
    Confirming that a certain parameter value was applied correctly works
    differently for different parameters. Hence, the following serves as an
    example only:
   </para>
   <example xml:id="ex-sapconf-change-parameter-5">
    <title>Checking Parameters</title>
    <para>
     To confirm that the setting for <literal>TCP_SLOW_START</literal> was
     applied, do the following:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       View the log file of &sapconf; to see whether it applied the value.
       Within <filename>/var/log/sapconf.log</filename>, check for a line
       containing this text:
      </para>
      <screen>Change net.ipv4.tcp_slow_start_after_idle from 1 to 0</screen>
      <para>
       Alternatively, the parameter may have already been set correctly
       before &sapconf; was started. In this case, &sapconf; will not change
       its value:
      </para>
      <screen>Leaving net.ipv4.tcp_slow_start_after_idle unchanged at 1</screen>
     </listitem>
     <listitem>
      <para>
       The underlying option behind <literal>TCP_SLOW_START</literal> can be
       manually configured at
       <filename>/proc/sys/net.ipv4.tcp_slow_start_after_idle</filename>.
       To check its actual current value, use:
      </para>
      <screen>&prompt.root;<command>sysctl net.ipv4.tcp_slow_start_after_idle</command></screen>
     </listitem>
    </itemizedlist>
   </example>
  </sect2>
  <sect2 xml:id="sec-sapconf-5-remove">
   <title>Removing &sapconf;</title>
   <para>
    To remove &sapconf; from a system, uninstall its package with:
   </para>
   <screen>&prompt.root;<command>zypper rm sapconf</command></screen>
   <para>
    Note that when doing this, dependencies of &sapconf; will remain installed.
    However, the service <systemitem class="daemon">sysstat</systemitem> will
    go into a disabled state. If it is still relevant to you, make sure to
    enable it again.
   </para>
  </sect2>
  <sect2 xml:id="sec-sapconf-5-more">
   <title>For More Information</title>
   <para>
    The following man pages provide additional information about &sapconf;:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Detailed description of all tuning parameters set by &sapconf;:
      <command>man 5 sapconf</command>
     </para>
    </listitem>
    <listitem>
     <para>
      Information about configuring and customizing the &sapconf; profile:
      <command>man 7 sapconf</command>
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Also see the blog series detailing the updated version of &sapconf; at
    <link xlink:href="https://www.suse.com/c/a-new-sapconf-is-available/"/>.
   </para>
  </sect2>
  <sect2 xml:id="sec-sapconf-5-tuned">
   <title>Using <command>tuned</command> Together with  &sapconf;</title>
   <para>
    With version 5 &sapconf; does not rely on &tuned; anymore. This means both tools
    can be used independently.
    &sapconf; will print a warning in it's log if <command>tuned</command> service
    is started.
   </para>
   <note>
    <title>Important: Using <command>tuned</command> and &sapconf; together</title>
    <para>
     If you are going to use <command>tuned</command> and &sapconf; simultaneously,
     be very careful, that bot tools do not configure the same system parameters.
    </para>
   </note> 
  </sect2>
 </sect1>

 <sect1 xml:id="sec-saptune">
  <title>Tuning Systems with &saptune;</title>
  <para>
   Using &saptune;, you can
   tune a system for &netweaver;, &hana;/&b1;, and &s4h; applications. This method
   relies on the system tuning service &tuned;.
  </para>
  <para>
   To use &saptune;, make sure
   that the packages <package>tuned</package> and
   <package>saptune</package> are installed on your system.
  </para>
  <note>
   <title>&tuned; Daemon</title>
   <para>
    &sapconf; (only version 4) and &saptune; both rely on the daemon &tuned; to set tuning
    configuration but they use different (though very similar) tuning
    profiles. Therefore, only one of &sapconf; or &saptune; can be enabled at
    a time.
   </para>
  </note>

  <sect2 xml:id="sec-s4s-saptune-enable">
  <title>Enabling &saptune; to Tune for an &sap; Application</title>
  <procedure xml:id="pro-s4s-tune">
   <step>
    <para>
     To tune a system, first find a tuning profile.
     To find the appropriate profile, use:
    </para>
    <screen>&prompt.user;<command>saptune solution list</command></screen>
    <para>
     &saptune; knows the following
     <quote>solution</quote> profiles:
    </para>
    <itemizedlist>
     <listitem>
      <formalpara>
       <title><literal>BOBJ</literal></title>
       <para>
        Profile for servers hosting &bo;.
       </para>
      </formalpara>
     </listitem>
     <listitem>
      <formalpara>
       <title><literal>HANA</literal></title>
       <para>
        Solution for running an &hana; database.
       </para>
      </formalpara>
     </listitem>
     <listitem>
      <formalpara>
       <title><literal>MAXDB</literal></title>
       <para>
        Solution for running an &sap; MaxDB database.
       </para>
      </formalpara>
     </listitem>
     <listitem>
      <formalpara>
       <title><literal>NETWEAVER</literal></title>
       <para>
        Profile for servers hosting an &netweaver; application.
       </para>
      </formalpara>
     </listitem>
     <listitem>
      <formalpara>
       <title><literal>S4HANA-APPSERVER</literal></title>
       <para>
        Profile for servers hosting an &s4h; application.
       </para>
      </formalpara>
     </listitem>
     <listitem>
      <formalpara>
       <title><literal>S4HANA-DBSERVER</literal></title>
       <para>
        Solution for running the &hana; database of an &s4h;
        installation (identical to &hana; solution).
       </para>
      </formalpara>
     </listitem>
     <listitem>
      <formalpara>
       <title><literal>SAP-ASE</literal></title>
       <para>
        Profile for servers hosting an &ase; database (formerly Sybase
        Adaptive Server Enterprise).
        <!-- SAP bought Sybase in 2010, really keep "Sybase" in here? -
        sknorr, 2017-07-04 -->
       </para>
      </formalpara>
     </listitem>
    </itemizedlist>
    <para>
     Alternatively, you can tune the computer according to recommendations
     from specific &sap; Notes. A list of notes that you can tune for is
     available via:
    </para>
    <screen>&prompt.root;<command>saptune note list</command></screen>
    <para>
     The referenced &sap; Notes are available from the &sap; Web site.
     The list entries starting with <literal>SUSE-GUIDE</literal> follow the
     recommendations made in
     <link xlink:href="https://www.suse.com/communities/blog/sles-1112-os-tuning-optimisation-guide-part-1/"/>
     and
     <link xlink:href="https://www.suse.com/communities/blog/sles-1112-network-cpu-tuning-optimization-part-2/"/>.
    </para>
   </step>
   <step>
    <itemizedlist>
     <listitem>
      <para>
       To set up &saptune; with a preconfigured solution, use:
      </para>
      <screen>&prompt.root;<command>saptune solution apply <replaceable>SOLUTION</replaceable></command></screen>
     </listitem>
     <listitem>
      <para>
       To set up &saptune; for the recommendations of a specific
       &sap; Note, use:
      </para>
      <screen>&prompt.root;<command>saptune note apply <replaceable>NOTE</replaceable></command></screen>
     </listitem>
    </itemizedlist>
    <tip>
     <title>Combining Optimizations</title>
     <para>
      You can freely combine <quote>solutions</quote> and
      <quote>notes.</quote> Combining multiple optimizations will never create
      conflicts.
     </para>
    </tip>
   </step>
   <step>
    <para>
     Finally, enable the &tuned; profile
     &saptune; and make sure the
     &tuned; daemon is active:
    </para>
    <screen>&prompt.root;<command>saptune daemon start</command></screen>
   </step>
  </procedure>
  <para>
   In the background, &saptune; applies a
   &tuned; profile also named
   &saptune; that is dynamically customized according to
   selected <quote>solutions</quote> and <quote>notes</quote>.
   Using <command>tuned-adm list</command>, you can also see this profile.
  </para>
  </sect2>

  <sect2 xml:id="sec-s4s-saptune-delete">
   <title>Deleting an &sap; Note</title>
   <para>
    This command allows to delete a created note, including the corresponding override
    file if available:
   </para>
   <screen>&prompt.root;<command>saptune note delete test</command>
Note to delete is a customer/vendor specific Note.
Do you really want to delete this Note (test2)? [y/n]: y</screen>
   <para>
    The note may not be applied at the time. Keep in mind the following points:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      A confirmation is needed to finish the action.
     </para>
    </listitem>
    <listitem>
     <para>
      Internal &sap; notes shipped by &saptune; cannot be deleted.
      Instead, the override file is removed when available.
     </para>
    </listitem>
    <listitem>
     <para>
      If the note is already applied, the command will be terminated with the
      information, that the note first needs to be reverted before it can be deleted.
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-s4s-saptune-rename">
   <title>Renaming an &sap; Note</title>
   <para>
    This command allows to rename a created note to a new name.
    If a corresponding override file is available, this file will be renamed too:
   </para>
   <screen>&prompt.root;<command>saptune note rename test test2</command>
Note to rename is a customer/vendor specific Note.
Do you really want to rename this Note (test) to the new name 'test2'? [y/n]: y</screen>
   <para>
    The note may not be applied at the time.
    Keep in mind the following points:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      A confirmation is needed to finish the action.
     </para>
    </listitem>
    <listitem>
     <para>
      Internal &sap; notes shipped by &saptune; cannot be renamed.
     </para>
    </listitem>
    <listitem>
     <para>
      If the note is already applied, the command will be terminated with the
      information, that the note first needs to be reverted before it can be deleted.
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-s4s-saptune-disable">
   <title>Disabling &saptune;</title>
   <para>
    To disable &saptune;, use one of the following ways:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Completely disable the daemon
      &tuned;:
     </para>
     <screen>&prompt.root;<command>systemctl disable tuned</command></screen>
    </listitem>
    <listitem>
     <para>
      Switch to a different
      &tuned; profile:
     </para>
     <screen>&prompt.root;<command>tuned-adm profile <replaceable>PROFILE_NAME</replaceable></command></screen>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-saptune-more">
   <title>For More Information</title>
  <para>
   See the following man pages:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <command>man 8 tuned-adm</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>man 8 saptune</command>
    </para>
   </listitem>
  </itemizedlist>
  <para>
   Also see the project home page
   <link xlink:href="https://github.com/HouzuoGuo/saptune/"/>.
  </para>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-s4s-sysctl">
  <title>Tuning Kernel Parameters Manually Using <command>sysctl</command></title>
  <para>
   In addition to or instead of tuning kernel parameters using
   &sapconf;/&saptune;, you can also use <command>sysctl</command> to
   make manual adjustments to kernel parameters. However, such changes using
   <command>sysctl</command> do not persist across reboots by default. To
   make them persist across reboots, add them to one of the configuration
   files read by <command>sysctl</command>.
  </para>
  <tip>
   <title><command>sysctl</command> and &saptune;</title>
   <para>
    If you plan to configure <command>sysctl</command> parameters for your
    &sap; system,
    consider using &saptune; as the central tool for
    managing such configurations.
   </para>
  </tip>
  <para>
   <!-- FIXME: -> SLES docs: we don't seem to have any good section to
   reference here. Thisll do for the moment. - sknorr, 2017-05-04 -->
   For more information about <command>sysctl</command>, see the man pages
   <literal>sysctl(8)</literal>, <literal>sysctl.conf(5)</literal>, and
   <literal>sysctl.d(5)</literal>.
  </para>
 </sect1>

 <sect1 xml:id="sec-s4s-memory-protection">
  <title>Tuning Workload Memory Protection</title>
  <para>
   Since &slsreg; 15, the page cache limit functionality has been replaced by
   workload memory protection using <systemitem
    class="resource">cgroup</systemitem>s.
  </para>
  <para>
   The idea is to put &sap; processes into a dedicated <systemitem
    class="resource">cgroup</systemitem> and protect memory by setting
   the <systemitem>memory.low</systemitem> interface file.
  </para>
  <para>
   The kernel will try to keep the configured amount of memory as long as
   possible in physical memory. This protects SAP workload for being
   swapped out to disk.
   Service Pack 2 contains an significant update of workload memory protection.
  </para>
 </sect1>

</chapter>
